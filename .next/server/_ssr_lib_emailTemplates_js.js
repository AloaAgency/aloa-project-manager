"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_lib_emailTemplates_js";
exports.ids = ["_ssr_lib_emailTemplates_js"];
exports.modules = {

/***/ "(ssr)/./lib/emailTemplates.js":
/*!*******************************!*\
  !*** ./lib/emailTemplates.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateAnalysisEmailHTML: () => (/* binding */ generateAnalysisEmailHTML),\n/* harmony export */   generateEmailPreview: () => (/* binding */ generateEmailPreview)\n/* harmony export */ });\nfunction generateAnalysisEmailHTML(formTitle, analysisData, recipientName = \"\", isClientFacing = true) {\n    const greeting = recipientName ? `Dear ${recipientName},` : \"Hello,\";\n    // Handle both string and object formats\n    let parsed;\n    if (typeof analysisData === \"object\" && analysisData !== null) {\n        // Already parsed/structured data\n        parsed = analysisData;\n    } else if (typeof analysisData === \"string\") {\n        // Try to parse as JSON first\n        try {\n            if (analysisData.startsWith(\"{\")) {\n                parsed = JSON.parse(analysisData);\n            } else {\n                // Parse markdown-style text\n                parsed = parseAnalysisForEmail(analysisData);\n            }\n        } catch (e) {\n            // Fallback to text parsing\n            parsed = parseAnalysisForEmail(analysisData);\n        }\n    } else {\n        // Fallback to empty structure\n        parsed = {\n            summary: \"\",\n            consensusAreas: [],\n            divergenceAreas: [],\n            recommendations: [],\n            synthesis: \"\",\n            statistics: {}\n        };\n    }\n    return `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>AI Analysis Report - ${formTitle}</title>\n  <!--[if mso]>\n  <noscript>\n    <xml>\n      <o:OfficeDocumentSettings>\n        <o:PixelsPerInch>96</o:PixelsPerInch>\n      </o:OfficeDocumentSettings>\n    </xml>\n  </noscript>\n  <![endif]-->\n</head>\n<body style=\"margin: 0; padding: 0; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; background-color: #f5f5f5;\">\n  <table role=\"presentation\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-color: #f5f5f5;\">\n    <tr>\n      <td align=\"center\" style=\"padding: 40px 20px;\">\n        <table role=\"presentation\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"600\" style=\"background-color: #ffffff; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n          \n          <!-- Header -->\n          <tr>\n            <td style=\"background-color: #000000; padding: 40px 30px; text-align: center; border-radius: 8px 8px 0 0;\">\n              <!-- Aloa Logo -->\n              <img src=\"https://images.ctfassets.net/qkznfzcikv51/xWpsUAypBrRgAjmbyLGYy/b969f4353174e4f209996ebf60af8f7c/aloa_-_white.svg\" \n                   alt=\"Aloa\" \n                   style=\"height: 40px; width: auto; margin: 0 auto 20px auto; display: block;\"\n              />\n              <!-- Form Title -->\n              <h1 style=\"margin: 0 0 10px 0; color: #FFF8E8; font-size: 28px; font-weight: 600; text-transform: uppercase; letter-spacing: 1px;\">\n                ${formTitle}\n              </h1>\n              <!-- Subtitle -->\n              <p style=\"margin: 0; color: #FFF8E8; font-size: 16px; opacity: 0.9;\">\n                Analysis based on ${parsed.statistics && parsed.statistics.totalResponses ? parsed.statistics.totalResponses : \"all\"} responses\n              </p>\n            </td>\n          </tr>\n          \n          <!-- Content -->\n          <tr>\n            <td style=\"padding: 40px 30px;\">\n              \n              <!-- Greeting -->\n              <p style=\"margin: 0 0 20px 0; color: #333333; font-size: 16px; line-height: 1.5;\">\n                ${greeting}\n              </p>\n              \n              <!-- Introduction -->\n              <p style=\"margin: 0 0 30px 0; color: #666666; font-size: 14px; line-height: 1.6;\">\n                ${isClientFacing ? `Thank you for participating in <strong>${formTitle}</strong>. We've analyzed all responses and are pleased to share the collective insights from all participants. This summary highlights where there's consensus and where perspectives differ.` : `We're pleased to share the AI-powered analysis of the responses collected through <strong>${formTitle}</strong>. This report provides valuable insights and recommendations based on the submitted data.`}\n              </p>\n              \n              ${parsed.summary ? `\n              <!-- Executive Summary -->\n              <div style=\"margin-bottom: 30px; padding: 20px; background-color: #FFF8E8; border-left: 4px solid #000000; border-radius: 4px;\">\n                <h2 style=\"margin: 0 0 15px 0; color: #000000; font-size: 18px; font-weight: 600;\">Executive Summary</h2>\n                <p style=\"margin: 0; color: #333333; font-size: 14px; line-height: 1.6;\">\n                  ${parsed.summary}\n                </p>\n              </div>\n              ` : \"\"}\n              \n              ${isClientFacing && parsed.consensusAreas && parsed.consensusAreas.length > 0 ? `\n              <!-- Where Your Team Agrees -->\n              <div style=\"margin-bottom: 30px;\">\n                <h2 style=\"margin: 0 0 20px 0; color: #000000; font-size: 18px; font-weight: 600;\">Where Your Team Strongly Agrees</h2>\n                ${parsed.consensusAreas.map((area)=>`\n                  <div style=\"margin-bottom: 20px; padding: 15px; background-color: #e8f5e9; border-left: 4px solid #4caf50; border-radius: 4px;\">\n                    <h3 style=\"margin: 0 0 10px 0; color: #2e7d32; font-size: 16px; font-weight: 600;\">${area.topic}</h3>\n                    <p style=\"margin: 0; color: #333333; font-size: 14px; line-height: 1.6;\">\n                      ${area.description}\n                    </p>\n                  </div>\n                `).join(\"\")}\n              </div>\n              ` : \"\"}\n              \n              ${isClientFacing && parsed.divergenceAreas && parsed.divergenceAreas.length > 0 ? `\n              <!-- Where Perspectives Differ -->\n              <div style=\"margin-bottom: 30px;\">\n                <h2 style=\"margin: 0 0 10px 0; color: #000000; font-size: 18px; font-weight: 600;\">Where Perspectives Differ</h2>\n                <p style=\"margin: 0 0 20px 0; color: #666666; font-size: 14px; font-style: italic;\">\n                  These differences represent opportunities to create more comprehensive solutions:\n                </p>\n                ${parsed.divergenceAreas.map((area)=>`\n                  <div style=\"margin-bottom: 20px; padding: 15px; background-color: #fff3e0; border-left: 4px solid #ff9800; border-radius: 4px;\">\n                    <h3 style=\"margin: 0 0 12px 0; color: #e65100; font-size: 16px; font-weight: 600;\">${area.topic}</h3>\n                    ${area.viewpoints && area.viewpoints.map((vp)=>`\n                      <div style=\"margin-bottom: 10px; padding: 10px; background-color: white; border-radius: 4px;\">\n                        <strong style=\"color: #333333; font-size: 13px;\">${vp.label} (${vp.percentage}% of team):</strong>\n                        <p style=\"margin: 5px 0 0 0; color: #666666; font-size: 13px; line-height: 1.5;\">\n                          ${vp.description}\n                        </p>\n                      </div>\n                    `).join(\"\")}\n                  </div>\n                `).join(\"\")}\n              </div>\n              ` : \"\"}\n              \n              ${!isClientFacing && parsed.insights && parsed.insights.length > 0 ? `\n              <!-- Key Insights (Internal) -->\n              <div style=\"margin-bottom: 30px;\">\n                <h2 style=\"margin: 0 0 15px 0; color: #000000; font-size: 18px; font-weight: 600;\">Key Insights</h2>\n                <ul style=\"margin: 0; padding-left: 20px; color: #333333;\">\n                  ${parsed.insights.map((insight)=>`\n                    <li style=\"margin-bottom: 10px; font-size: 14px; line-height: 1.6;\">${insight}</li>\n                  `).join(\"\")}\n                </ul>\n              </div>\n              ` : \"\"}\n              \n              ${!isClientFacing && parsed.trends && parsed.trends.length > 0 ? `\n              <!-- Trends & Patterns (Internal) -->\n              <div style=\"margin-bottom: 30px;\">\n                <h2 style=\"margin: 0 0 15px 0; color: #000000; font-size: 18px; font-weight: 600;\">Trends & Patterns</h2>\n                <ul style=\"margin: 0; padding-left: 20px; color: #333333;\">\n                  ${parsed.trends.map((trend)=>`\n                    <li style=\"margin-bottom: 10px; font-size: 14px; line-height: 1.6;\">${trend}</li>\n                  `).join(\"\")}\n                </ul>\n              </div>\n              ` : \"\"}\n              \n              ${parsed.recommendations && parsed.recommendations.length > 0 && !isClientFacing ? `\n              <!-- Recommendations (Internal Only) -->\n              <div style=\"margin-bottom: 30px; padding: 20px; background-color: #f8f9fa; border-radius: 4px;\">\n                <h2 style=\"margin: 0 0 15px 0; color: #000000; font-size: 18px; font-weight: 600;\">Recommendations</h2>\n                <ol style=\"margin: 0; padding-left: 20px; color: #333333;\">\n                  ${parsed.recommendations.map((rec)=>`\n                    <li style=\"margin-bottom: 10px; font-size: 14px; line-height: 1.6; font-weight: 500;\">${rec}</li>\n                  `).join(\"\")}\n                </ol>\n              </div>\n              ` : \"\"}\n              \n              ${parsed.synthesis && isClientFacing ? `\n              <!-- Synthesis & Path Forward -->\n              <div style=\"margin-bottom: 30px; padding: 20px; background-color: #e8f4fd; border-radius: 4px; border-left: 4px solid #0066cc;\">\n                <h2 style=\"margin: 0 0 20px 0; color: #000000; font-size: 18px; font-weight: 600;\">Synthesis & Path Forward</h2>\n                <div style=\"color: #333333; font-size: 14px; line-height: 1.7;\">\n                  ${formatSynthesisForHTML(parsed.synthesis)}\n                </div>\n              </div>\n              ` : \"\"}\n              \n              ${parsed.statistics && Object.keys(parsed.statistics).length > 0 ? `\n              <!-- Statistics -->\n              <div style=\"margin-bottom: 30px;\">\n                <h2 style=\"margin: 0 0 15px 0; color: #000000; font-size: 18px; font-weight: 600;\">Response Statistics</h2>\n                <table role=\"presentation\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n                  ${parsed.statistics.totalResponses !== undefined ? `\n                  <tr>\n                    <td style=\"padding: 8px 0; color: #666666; font-size: 14px;\">Total Responses:</td>\n                    <td style=\"padding: 8px 0; color: #000000; font-size: 14px; font-weight: 600; text-align: right;\">${parsed.statistics.totalResponses}</td>\n                  </tr>\n                  ` : \"\"}\n                  ${parsed.statistics.completionRate !== undefined ? `\n                  <tr>\n                    <td style=\"padding: 8px 0; color: #666666; font-size: 14px;\">Completion Rate:</td>\n                    <td style=\"padding: 8px 0; color: #000000; font-size: 14px; font-weight: 600; text-align: right;\">${parsed.statistics.completionRate}%</td>\n                  </tr>\n                  ` : \"\"}\n                  ${parsed.statistics.averageTime !== undefined ? `\n                  <tr>\n                    <td style=\"padding: 8px 0; color: #666666; font-size: 14px;\">Average Time:</td>\n                    <td style=\"padding: 8px 0; color: #000000; font-size: 14px; font-weight: 600; text-align: right;\">${parsed.statistics.averageTime}</td>\n                  </tr>\n                  ` : \"\"}\n                </table>\n              </div>\n              ` : \"\"}\n              \n              <!-- Closing -->\n              <div style=\"margin-top: 40px; padding-top: 20px; border-top: 1px solid #e0e0e0;\">\n                ${isClientFacing ? `\n                  <p style=\"margin: 0 0 20px 0; color: #666666; font-size: 14px; line-height: 1.6;\">\n                    This analysis represents the collective input from all participants. We appreciate your contribution to this collaborative process.\n                  </p>\n                  <p style=\"margin: 0 0 20px 0; color: #666666; font-size: 14px; line-height: 1.6;\">\n                    If you have any questions about these findings or would like to discuss next steps, please don't hesitate to reach out to our team.\n                  </p>\n                ` : `\n                  <p style=\"margin: 0 0 20px 0; color: #666666; font-size: 14px; line-height: 1.6;\">\n                    For a more detailed analysis and to download the full report, please visit your dashboard.\n                  </p>\n                  <p style=\"margin: 0 0 20px 0; color: #666666; font-size: 14px; line-height: 1.6;\">\n                    Thank you for using Aloa® Custom Forms. If you have any questions about this analysis, please don't hesitate to reach out.\n                  </p>\n                `}\n              </div>\n              \n              <p style=\"margin: 20px 0 0 0; color: #666666; font-size: 14px;\">\n                Best regards,<br>\n                <strong>The Aloa® Team</strong>\n              </p>\n              \n            </td>\n          </tr>\n          \n          <!-- Footer -->\n          <tr>\n            <td style=\"padding: 30px; background-color: #f8f9fa; text-align: center; border-radius: 0 0 8px 8px;\">\n              <p style=\"margin: 0 0 10px 0; color: #999999; font-size: 12px;\">\n                This report was generated on ${new Date().toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n    })}\n              </p>\n              <p style=\"margin: 0; color: #999999; font-size: 12px;\">\n                © ${new Date().getFullYear()} Aloa®. All rights reserved.\n              </p>\n            </td>\n          </tr>\n          \n        </table>\n      </td>\n    </tr>\n  </table>\n</body>\n</html>\n  `;\n}\nfunction parseAnalysisForEmail(analysisText) {\n    const data = {\n        summary: \"\",\n        insights: [],\n        trends: [],\n        recommendations: [],\n        synthesis: \"\",\n        consensusAreas: [],\n        divergenceAreas: [],\n        statistics: {}\n    };\n    if (!analysisText) return data;\n    // Log for debugging\n    console.log(\"Parsing analysis text for email:\", analysisText.substring(0, 500));\n    // Split by sections (looking for markdown headers)\n    const sections = analysisText.split(/##\\s+/);\n    sections.forEach((section)=>{\n        const lines = section.trim().split(\"\\n\");\n        const sectionTitle = lines[0].toLowerCase();\n        const content = lines.slice(1).join(\"\\n\").trim();\n        if (sectionTitle.includes(\"summary\") || sectionTitle.includes(\"overview\")) {\n            data.summary = content.replace(/^[-•*]\\s*/gm, \"\").trim();\n        } else if (sectionTitle.includes(\"strongly agree\") || sectionTitle.includes(\"team agrees\") || sectionTitle.includes(\"where your team strongly agrees\")) {\n            // Parse consensus areas with more detail\n            const consensusBlocks = content.split(/###\\s+/).filter(Boolean);\n            consensusBlocks.forEach((block)=>{\n                const blockLines = block.trim().split(\"\\n\");\n                if (blockLines.length > 0) {\n                    const topic = blockLines[0].trim();\n                    const description = blockLines.slice(1).join(\" \").replace(/\\*[^*]+\\*/g, \"\").trim();\n                    if (topic && description) {\n                        data.consensusAreas.push({\n                            topic,\n                            description\n                        });\n                    }\n                }\n            });\n        } else if (sectionTitle.includes(\"differ\") || sectionTitle.includes(\"diverge\") || sectionTitle.includes(\"where perspectives differ\")) {\n            // Parse divergence areas with viewpoints\n            const divergenceBlocks = content.split(/###\\s+/).filter(Boolean);\n            divergenceBlocks.forEach((block)=>{\n                const blockLines = block.trim().split(\"\\n\");\n                if (blockLines.length > 0) {\n                    const topic = blockLines[0].trim();\n                    const viewpoints = [];\n                    // Extract viewpoints from the block\n                    blockLines.forEach((line)=>{\n                        const viewpointMatch = line.match(/\\*\\*(.+?)\\s*\\(([\\d.]+)%[^)]*\\):\\*\\*\\s*(.+)/);\n                        if (viewpointMatch) {\n                            viewpoints.push({\n                                label: viewpointMatch[1].trim(),\n                                percentage: viewpointMatch[2],\n                                description: viewpointMatch[3].trim()\n                            });\n                        }\n                    });\n                    if (topic && viewpoints.length > 0) {\n                        data.divergenceAreas.push({\n                            topic,\n                            viewpoints\n                        });\n                    }\n                }\n            });\n        } else if (sectionTitle.includes(\"insight\") || sectionTitle.includes(\"finding\")) {\n            const insights = content.split(/^[-•*]\\s+/m).filter(Boolean);\n            data.insights = insights.map((i)=>i.trim());\n        } else if (sectionTitle.includes(\"trend\") || sectionTitle.includes(\"pattern\")) {\n            const trends = content.split(/^[-•*]\\s+/m).filter(Boolean);\n            data.trends = trends.map((t)=>t.trim());\n        } else if (sectionTitle.includes(\"recommend\") || sectionTitle.includes(\"suggestion\")) {\n            const recs = content.split(/^[\\d.]+\\s+/m).filter(Boolean);\n            data.recommendations = recs.map((r)=>r.trim());\n        } else if (sectionTitle.includes(\"synthesis\") || sectionTitle.includes(\"path forward\")) {\n            data.synthesis = content.replace(/^[-•*]\\s*/gm, \"\").trim();\n        } else if (sectionTitle.includes(\"statistic\") || sectionTitle.includes(\"metric\")) {\n            const statLines = content.split(\"\\n\");\n            statLines.forEach((line)=>{\n                if (line.includes(\"Total\") && line.includes(\"Response\")) {\n                    const match = line.match(/\\d+/);\n                    if (match) data.statistics.totalResponses = parseInt(match[0]);\n                }\n                if (line.includes(\"Completion\") && line.includes(\"Rate\")) {\n                    const match = line.match(/(\\d+(?:\\.\\d+)?)\\s*%/);\n                    if (match) data.statistics.completionRate = parseFloat(match[1]);\n                }\n                if (line.includes(\"Average\") && line.includes(\"Time\")) {\n                    const match = line.match(/(\\d+(?:\\.\\d+)?)\\s*(minute|second|hour)/i);\n                    if (match) data.statistics.averageTime = `${match[1]} ${match[2]}s`;\n                }\n                if (line.includes(\"overall alignment\")) {\n                    const match = line.match(/(\\d+(?:\\.\\d+)?)\\s*%/);\n                    if (match) data.statistics.consensusScore = parseFloat(match[1]);\n                }\n            });\n        }\n    });\n    // If no structured data found, treat entire text as summary\n    if (!data.summary && data.insights.length === 0 && data.trends.length === 0) {\n        // Try to extract at least the first paragraph as summary\n        const paragraphs = analysisText.split(/\\n\\n+/);\n        if (paragraphs.length > 0) {\n            data.summary = paragraphs[0].replace(/^#\\s+/, \"\").trim();\n        }\n    }\n    return data;\n}\n// Export preview function for UI\nfunction generateEmailPreview(formTitle, analysisData, recipientName = \"\", isClientFacing = true) {\n    const emailHTML = generateAnalysisEmailHTML(formTitle, analysisData, recipientName, isClientFacing);\n    // Return both HTML and a simplified preview object\n    return {\n        html: emailHTML,\n        preview: {\n            subject: `${isClientFacing ? \"Your Input Summary\" : \"AI Analysis Report\"}: ${formTitle}`,\n            greeting: recipientName ? `Dear ${recipientName},` : \"Hello,\",\n            isClientFacing,\n            sections: extractSectionsFromHTML(emailHTML)\n        }\n    };\n}\nfunction extractSectionsFromHTML(html) {\n    // Simple extraction of main sections for preview\n    const sections = [];\n    if (html.includes(\"Executive Summary\")) {\n        sections.push(\"Executive Summary\");\n    }\n    if (html.includes(\"Key Insights\")) {\n        sections.push(\"Key Insights\");\n    }\n    if (html.includes(\"Areas of Divergence\")) {\n        sections.push(\"Areas of Divergence\");\n    }\n    if (html.includes(\"Synthesis & Path Forward\")) {\n        sections.push(\"Synthesis & Path Forward\");\n    }\n    if (html.includes(\"Recommendations\")) {\n        sections.push(\"Recommendations\");\n    }\n    if (html.includes(\"Response Statistics\")) {\n        sections.push(\"Response Statistics\");\n    }\n    return sections;\n}\n// Format synthesis text with proper HTML\nfunction formatSynthesisForHTML(synthesis) {\n    if (!synthesis) return \"\";\n    // Handle the synthesis text that might contain markdown\n    let html = \"\";\n    // Split by double newlines to get paragraphs\n    const paragraphs = synthesis.split(\"\\n\\n\");\n    paragraphs.forEach((paragraph)=>{\n        // Skip empty paragraphs\n        if (!paragraph.trim()) return;\n        // Check for bold headers (e.g., **Build on Strong Foundations:**)\n        if (paragraph.includes(\"**\") && paragraph.includes(\":**\")) {\n            // Process bold headers with content\n            const processedPara = paragraph.replace(/\\*\\*([^:]+):\\*\\*/g, '<strong style=\"color: #0066cc; display: block; margin-bottom: 8px;\">$1:</strong>').replace(/\\*\\*([^*]+)\\*\\*/g, \"<strong>$1</strong>\");\n            html += `<div style=\"margin: 0 0 16px 0;\">${processedPara}</div>`;\n        } else if (paragraph.match(/^\\d+\\./m)) {\n            // Split by newlines and process as list items\n            const items = paragraph.split(\"\\n\").filter((item)=>item.trim());\n            html += '<ol style=\"margin: 0 0 16px 0; padding-left: 24px;\">';\n            items.forEach((item)=>{\n                const cleanItem = item.replace(/^\\d+\\.\\s*/, \"\").trim();\n                if (cleanItem) {\n                    html += `<li style=\"margin-bottom: 8px; line-height: 1.6;\">${cleanItem}</li>`;\n                }\n            });\n            html += \"</ol>\";\n        } else {\n            // Process any inline bold text\n            const processedPara = paragraph.replace(/\\*\\*([^*]+)\\*\\*/g, \"<strong>$1</strong>\");\n            html += `<p style=\"margin: 0 0 16px 0; line-height: 1.6;\">${processedPara}</p>`;\n        }\n    });\n    return html;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./lib/emailTemplates.js\n");

/***/ })

};
;