"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/aloa-projects/[projectId]/client-view/route";
exports.ids = ["app/api/aloa-projects/[projectId]/client-view/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fclient-view%2Froute&page=%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fclient-view%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fclient-view%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fclient-view%2Froute&page=%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fclient-view%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fclient-view%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_rosspalmer_Ross_GitHub_Projects_aloa_web_design_project_manager_app_api_aloa_projects_projectId_client_view_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/aloa-projects/[projectId]/client-view/route.js */ \"(rsc)/./app/api/aloa-projects/[projectId]/client-view/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/aloa-projects/[projectId]/client-view/route\",\n        pathname: \"/api/aloa-projects/[projectId]/client-view\",\n        filename: \"route\",\n        bundlePath: \"app/api/aloa-projects/[projectId]/client-view/route\"\n    },\n    resolvedPagePath: \"/Users/rosspalmer/Ross GitHub Projects/aloa-web-design-project-manager/app/api/aloa-projects/[projectId]/client-view/route.js\",\n    nextConfigOutput,\n    userland: _Users_rosspalmer_Ross_GitHub_Projects_aloa_web_design_project_manager_app_api_aloa_projects_projectId_client_view_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/aloa-projects/[projectId]/client-view/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhbG9hLXByb2plY3RzJTJGJTVCcHJvamVjdElkJTVEJTJGY2xpZW50LXZpZXclMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFsb2EtcHJvamVjdHMlMkYlNUJwcm9qZWN0SWQlNUQlMkZjbGllbnQtdmlldyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFsb2EtcHJvamVjdHMlMkYlNUJwcm9qZWN0SWQlNUQlMkZjbGllbnQtdmlldyUyRnJvdXRlLmpzJmFwcERpcj0lMkZVc2VycyUyRnJvc3NwYWxtZXIlMkZSb3NzJTIwR2l0SHViJTIwUHJvamVjdHMlMkZhbG9hLXdlYi1kZXNpZ24tcHJvamVjdC1tYW5hZ2VyJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnJvc3NwYWxtZXIlMkZSb3NzJTIwR2l0SHViJTIwUHJvamVjdHMlMkZhbG9hLXdlYi1kZXNpZ24tcHJvamVjdC1tYW5hZ2VyJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUM2RTtBQUMxSjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2Fsb2EtcHJvamVjdC1tYW5hZ2VyLz9hMzRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9yb3NzcGFsbWVyL1Jvc3MgR2l0SHViIFByb2plY3RzL2Fsb2Etd2ViLWRlc2lnbi1wcm9qZWN0LW1hbmFnZXIvYXBwL2FwaS9hbG9hLXByb2plY3RzL1twcm9qZWN0SWRdL2NsaWVudC12aWV3L3JvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hbG9hLXByb2plY3RzL1twcm9qZWN0SWRdL2NsaWVudC12aWV3L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWxvYS1wcm9qZWN0cy9bcHJvamVjdElkXS9jbGllbnQtdmlld1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYWxvYS1wcm9qZWN0cy9bcHJvamVjdElkXS9jbGllbnQtdmlldy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9yb3NzcGFsbWVyL1Jvc3MgR2l0SHViIFByb2plY3RzL2Fsb2Etd2ViLWRlc2lnbi1wcm9qZWN0LW1hbmFnZXIvYXBwL2FwaS9hbG9hLXByb2plY3RzL1twcm9qZWN0SWRdL2NsaWVudC12aWV3L3JvdXRlLmpzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hbG9hLXByb2plY3RzL1twcm9qZWN0SWRdL2NsaWVudC12aWV3L3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fclient-view%2Froute&page=%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fclient-view%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fclient-view%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/aloa-projects/[projectId]/client-view/route.js":
/*!****************************************************************!*\
  !*** ./app/api/aloa-projects/[projectId]/client-view/route.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./lib/supabase.js\");\n\n\n// GET project data for client view\nasync function GET(request, { params }) {\n    try {\n        const { projectId } = params;\n        const { searchParams } = new URL(request.url);\n        const userId = searchParams.get(\"userId\") || \"anonymous\";\n        console.log(`Fetching client view for project: ${projectId}, user: ${userId}`);\n        // Fetch project details\n        const { data: project, error: projectError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_projects\").select(\"*\").eq(\"id\", projectId).single();\n        if (projectError) {\n            console.error(\"Error fetching project:\", projectError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Project not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Fetch projectlets with their applets\n        const { data: projectlets, error: projectletsError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_projectlets\").select(`\n        *,\n        applets:aloa_applets(\n          *\n        )\n      `).eq(\"project_id\", projectId).order(\"sequence_order\", {\n            ascending: true\n        });\n        if (projectletsError) {\n            console.error(\"Error fetching projectlets:\", projectletsError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to fetch projectlets\"\n            }, {\n                status: 500\n            });\n        }\n        // Sort applets within each projectlet by order_index\n        const sortedProjectlets = projectlets?.map((projectlet)=>({\n                ...projectlet,\n                applets: projectlet.applets?.sort((a, b)=>a.order_index - b.order_index) || []\n            })) || [];\n        // Fetch user-specific progress for each applet\n        const { data: userProgress } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_applet_progress\").select(\"*\").eq(\"project_id\", projectId).eq(\"user_id\", userId);\n        // Create a map of user progress by applet ID\n        const progressMap = {};\n        userProgress?.forEach((progress)=>{\n            progressMap[progress.applet_id] = progress;\n        });\n        // For each form applet, fetch the associated form details and apply user progress\n        for (const projectlet of sortedProjectlets){\n            for (const applet of projectlet.applets){\n                // Apply user-specific progress\n                const userAppletProgress = progressMap[applet.id];\n                if (userAppletProgress) {\n                    applet.user_status = userAppletProgress.status;\n                    applet.user_completion_percentage = userAppletProgress.completion_percentage;\n                    applet.user_started_at = userAppletProgress.started_at;\n                    applet.user_completed_at = userAppletProgress.completed_at;\n                    applet.form_progress = userAppletProgress.form_progress;\n                } else {\n                    applet.user_status = \"not_started\";\n                    applet.user_completion_percentage = 0;\n                }\n                if (applet.type === \"form\" && applet.form_id) {\n                    const { data: form } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_forms\").select(`\n              id, \n              title, \n              description, \n              url_id,\n              status,\n              sections,\n              aloa_form_fields (\n                id,\n                field_label,\n                field_name,\n                field_type,\n                required,\n                placeholder,\n                options,\n                validation,\n                field_order,\n                help_text,\n                default_value\n              )\n            `).eq(\"id\", applet.form_id).single();\n                    if (form) {\n                        // Sort fields by order\n                        if (form.aloa_form_fields) {\n                            form.aloa_form_fields.sort((a, b)=>(a.field_order || 0) - (b.field_order || 0));\n                        }\n                        applet.form = form;\n                    }\n                }\n            }\n        }\n        // Debug: Log all projectlets and their status\n        console.log(\"All projectlets:\", sortedProjectlets.map((p)=>({\n                name: p.name,\n                status: p.status,\n                appletCount: p.applets.length,\n                applets: p.applets.map((a)=>({\n                        name: a.name,\n                        user_status: a.user_status,\n                        type: a.type\n                    }))\n            })));\n        // For locked projectlets with no applets, estimate they will have at least 1 applet each\n        // This ensures they're counted in the overall project scope\n        const estimatedTotalApplets = sortedProjectlets.reduce((sum, p)=>{\n            if (p.status === \"locked\" && p.applets.length === 0) {\n                // Locked projectlet with no applets - count as having 1 future applet\n                return sum + 1;\n            }\n            return sum + p.applets.length;\n        }, 0);\n        // Count completed applets - checking user_status which was set from progress data\n        let completedCount = 0;\n        sortedProjectlets.forEach((p)=>{\n            p.applets.forEach((a)=>{\n                if (a.user_status === \"completed\" || a.user_status === \"approved\") {\n                    completedCount++;\n                    console.log(`Counting as completed: ${a.name} (status: ${a.user_status})`);\n                } else {\n                    console.log(`Not completed: ${a.name} (status: ${a.user_status})`);\n                }\n            });\n        });\n        const completedApplets = completedCount;\n        // Calculate progress based on estimated total to include locked projectlets in scope\n        const progressPercentage = estimatedTotalApplets > 0 ? Math.round(completedApplets / estimatedTotalApplets * 100) : 0;\n        console.log(`Calculation Debug - Total Projectlets: ${sortedProjectlets.length} (${sortedProjectlets.filter((p)=>p.status === \"locked\").length} locked), Estimated Total Applets: ${estimatedTotalApplets}, Completed: ${completedApplets}, Percentage: ${progressPercentage}%`);\n        // Also track projectlet completion for reference\n        const totalProjectlets = sortedProjectlets.length;\n        let completedProjectlets = 0;\n        // A projectlet is considered complete if ALL its applets are completed or approved\n        for (const projectlet of sortedProjectlets){\n            const allAppletsComplete = projectlet.applets.length > 0 && projectlet.applets.every((applet)=>applet.user_status === \"completed\" || applet.user_status === \"approved\");\n            if (allAppletsComplete) {\n                completedProjectlets++;\n            }\n        }\n        console.log(`Client view data - Applets: ${completedApplets}/${estimatedTotalApplets} (${progressPercentage}%), Projectlets: ${completedProjectlets}/${totalProjectlets}`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            project,\n            projectlets: sortedProjectlets,\n            stats: {\n                totalApplets: estimatedTotalApplets,\n                completedApplets,\n                progressPercentage\n            }\n        });\n    } catch (error) {\n        console.error(\"Error in client-view route:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// POST update applet status (client interaction)\nasync function POST(request, { params }) {\n    try {\n        const { projectId } = params;\n        const { appletId, status, interactionType, data, userId = \"anonymous\" } = await request.json();\n        console.log(`Client interaction - Project: ${projectId}, Applet: ${appletId}, User: ${userId}, Type: ${interactionType}, Status: ${status}`);\n        // Update user-specific applet progress\n        const { data: userProgress, error: progressError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.rpc(\"update_applet_progress\", {\n            p_applet_id: appletId,\n            p_user_id: userId,\n            p_project_id: projectId,\n            p_status: status,\n            p_completion_percentage: status === \"completed\" ? 100 : null,\n            p_form_progress: data?.form_progress || null\n        });\n        if (progressError) {\n            console.error(\"Error updating user progress:\", progressError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to update progress\"\n            }, {\n                status: 500\n            });\n        }\n        console.log(\"User progress updated successfully:\", userProgress);\n        // For form applets, update status based on form state\n        if (interactionType === \"form_submit\" && status === \"completed\") {\n            // Get the applet details to check if it's a form type\n            const { data: applet } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_applets\").select(\"type, form_id, status\").eq(\"id\", appletId).single();\n            if (applet?.type === \"form\" && applet?.form_id) {\n                // Check if the form is locked/closed\n                const { data: form } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_forms\").select(\"status\").eq(\"id\", applet.form_id).single();\n                // If form is locked (status = 'closed'), mark applet as completed\n                // Otherwise, mark as in_progress (has responses but still accepting)\n                const newStatus = form?.status === \"closed\" ? \"completed\" : \"in_progress\";\n                const updateData = {\n                    status: newStatus,\n                    completion_percentage: newStatus === \"completed\" ? 100 : 50,\n                    ...newStatus === \"completed\" && {\n                        completed_at: new Date().toISOString()\n                    }\n                };\n                const { error: appletError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_applets\").update(updateData).eq(\"id\", appletId);\n                if (appletError) {\n                    console.error(\"Error updating applet status:\", appletError);\n                }\n            }\n        } else if (status === \"completed\" && interactionType !== \"form_submit\") {\n            // For non-form applets, mark as completed immediately\n            const updateData = {\n                status: \"completed\",\n                completion_percentage: 100,\n                completed_at: new Date().toISOString()\n            };\n            const { error: appletError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_applets\").update(updateData).eq(\"id\", appletId);\n            if (appletError) {\n                console.error(\"Error updating applet default status:\", appletError);\n            }\n        }\n        // Record the interaction\n        const { error: interactionError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_applet_interactions\").insert([\n            {\n                applet_id: appletId,\n                project_id: projectId,\n                interaction_type: interactionType,\n                user_role: \"client\",\n                data: data || {}\n            }\n        ]);\n        if (interactionError) {\n            console.error(\"Error recording interaction:\", interactionError);\n        // Don't fail the request if interaction logging fails\n        }\n        // If this was a completion, check if all applets in the projectlet are complete\n        if (status === \"completed\") {\n            // Get the projectlet this applet belongs to\n            const { data: applet } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_applets\").select(\"projectlet_id\").eq(\"id\", appletId).single();\n            if (applet?.projectlet_id) {\n                // Check if all applets in this projectlet are completed\n                const { data: projectletApplets } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_applets\").select(\"status\").eq(\"projectlet_id\", applet.projectlet_id);\n                const allCompleted = projectletApplets?.every((a)=>a.status === \"completed\" || a.status === \"approved\");\n                if (allCompleted) {\n                    // Update projectlet status to completed\n                    await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_projectlets\").update({\n                        status: \"completed\"\n                    }).eq(\"id\", applet.projectlet_id);\n                    console.log(`Projectlet ${applet.projectlet_id} marked as completed`);\n                }\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            progress: userProgress\n        });\n    } catch (error) {\n        console.error(\"Error in client interaction:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/aloa-projects/[projectId]/client-view/route.js\n");

/***/ }),

/***/ "(rsc)/./lib/supabase.js":
/*!*************************!*\
  !*** ./lib/supabase.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://eycgzjqwowrdmjlzqqyg.supabase.co\" || 0;\n// Check for ANON_KEY first as it's the one that's actually set in the environment\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImV5Y2d6anF3b3dyZG1qbHpxcXlnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQwODcyMDIsImV4cCI6MjA2OTY2MzIwMn0.QfdUDAF8MweVTmJtrgnPiLWRdXz7hpFIzre-hiVay4E\" || 0 || 0;\n// Log what we're using (without exposing full key)\nif (false) {}\n// Only check for environment variables in production or when actually using the client\nlet supabase = null;\nif (supabaseUrl && supabaseKey) {\n    supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\n} else if (false) {}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7QUFFckQsTUFBTUMsY0FBY0MsMENBQW9DLElBQUk7QUFDNUQsa0ZBQWtGO0FBQ2xGLE1BQU1HLGNBQWNILGtOQUF5QyxJQUFJQSxDQUFnRCxJQUFJO0FBRXJILG1EQUFtRDtBQUNuRCxJQUFJLEtBQTBELEVBQWUsRUFPNUU7QUFFRCx1RkFBdUY7QUFDdkYsSUFBSVksV0FBVztBQUVmLElBQUliLGVBQWVJLGFBQWE7SUFDOUJTLFdBQVdkLG1FQUFZQSxDQUFDQyxhQUFhSTtBQUN2QyxPQUFPLElBQUlILEtBQXlCLEVBQWMsRUFFakQ7QUFFbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbG9hLXByb2plY3QtbWFuYWdlci8uL2xpYi9zdXBhYmFzZS5qcz8xNTk4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG5cbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIHx8ICcnO1xuLy8gQ2hlY2sgZm9yIEFOT05fS0VZIGZpcnN0IGFzIGl0J3MgdGhlIG9uZSB0aGF0J3MgYWN0dWFsbHkgc2V0IGluIHRoZSBlbnZpcm9ubWVudFxuY29uc3Qgc3VwYWJhc2VLZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSB8fCBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9QVUJMSVNIQUJMRV9LRVkgfHwgJyc7XG5cbi8vIExvZyB3aGF0IHdlJ3JlIHVzaW5nICh3aXRob3V0IGV4cG9zaW5nIGZ1bGwga2V5KVxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gIGNvbnNvbGUubG9nKCdTdXBhYmFzZSBjbGllbnQgY29uZmlnOicsIHtcbiAgICB1cmw6IHN1cGFiYXNlVXJsID8gJ3ByZXNlbnQnIDogJ21pc3NpbmcnLFxuICAgIGtleVNvdXJjZTogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkgPyAnQU5PTl9LRVknIDogXG4gICAgICAgICAgICAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9QVUJMSVNIQUJMRV9LRVkgPyAnUFVCTElTSEFCTEVfS0VZJyA6ICdtaXNzaW5nJyxcbiAgICBrZXlQcmVmaXg6IHN1cGFiYXNlS2V5ID8gc3VwYWJhc2VLZXkuc3Vic3RyaW5nKDAsIDIwKSArICcuLi4nIDogJ21pc3NpbmcnXG4gIH0pO1xufVxuXG4vLyBPbmx5IGNoZWNrIGZvciBlbnZpcm9ubWVudCB2YXJpYWJsZXMgaW4gcHJvZHVjdGlvbiBvciB3aGVuIGFjdHVhbGx5IHVzaW5nIHRoZSBjbGllbnRcbmxldCBzdXBhYmFzZSA9IG51bGw7XG5cbmlmIChzdXBhYmFzZVVybCAmJiBzdXBhYmFzZUtleSkge1xuICBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VLZXkpO1xufSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGNvbnNvbGUuZXJyb3IoJ1dhcm5pbmc6IFN1cGFiYXNlIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgbWlzc2luZycpO1xufVxuXG5leHBvcnQgeyBzdXBhYmFzZSB9OyJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUtleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfUFVCTElTSEFCTEVfS0VZIiwiY29uc29sZSIsImxvZyIsInVybCIsImtleVNvdXJjZSIsImtleVByZWZpeCIsInN1YnN0cmluZyIsInN1cGFiYXNlIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fclient-view%2Froute&page=%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fclient-view%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fclient-view%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();