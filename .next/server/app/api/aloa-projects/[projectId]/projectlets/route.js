"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/aloa-projects/[projectId]/projectlets/route";
exports.ids = ["app/api/aloa-projects/[projectId]/projectlets/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fprojectlets%2Froute&page=%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fprojectlets%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fprojectlets%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fprojectlets%2Froute&page=%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fprojectlets%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fprojectlets%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_rosspalmer_Ross_GitHub_Projects_aloa_web_design_project_manager_app_api_aloa_projects_projectId_projectlets_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/aloa-projects/[projectId]/projectlets/route.js */ \"(rsc)/./app/api/aloa-projects/[projectId]/projectlets/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/aloa-projects/[projectId]/projectlets/route\",\n        pathname: \"/api/aloa-projects/[projectId]/projectlets\",\n        filename: \"route\",\n        bundlePath: \"app/api/aloa-projects/[projectId]/projectlets/route\"\n    },\n    resolvedPagePath: \"/Users/rosspalmer/Ross GitHub Projects/aloa-web-design-project-manager/app/api/aloa-projects/[projectId]/projectlets/route.js\",\n    nextConfigOutput,\n    userland: _Users_rosspalmer_Ross_GitHub_Projects_aloa_web_design_project_manager_app_api_aloa_projects_projectId_projectlets_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/aloa-projects/[projectId]/projectlets/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhbG9hLXByb2plY3RzJTJGJTVCcHJvamVjdElkJTVEJTJGcHJvamVjdGxldHMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFsb2EtcHJvamVjdHMlMkYlNUJwcm9qZWN0SWQlNUQlMkZwcm9qZWN0bGV0cyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFsb2EtcHJvamVjdHMlMkYlNUJwcm9qZWN0SWQlNUQlMkZwcm9qZWN0bGV0cyUyRnJvdXRlLmpzJmFwcERpcj0lMkZVc2VycyUyRnJvc3NwYWxtZXIlMkZSb3NzJTIwR2l0SHViJTIwUHJvamVjdHMlMkZhbG9hLXdlYi1kZXNpZ24tcHJvamVjdC1tYW5hZ2VyJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnJvc3NwYWxtZXIlMkZSb3NzJTIwR2l0SHViJTIwUHJvamVjdHMlMkZhbG9hLXdlYi1kZXNpZ24tcHJvamVjdC1tYW5hZ2VyJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUM2RTtBQUMxSjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2Fsb2EtcHJvamVjdC1tYW5hZ2VyLz82MjJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9yb3NzcGFsbWVyL1Jvc3MgR2l0SHViIFByb2plY3RzL2Fsb2Etd2ViLWRlc2lnbi1wcm9qZWN0LW1hbmFnZXIvYXBwL2FwaS9hbG9hLXByb2plY3RzL1twcm9qZWN0SWRdL3Byb2plY3RsZXRzL3JvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hbG9hLXByb2plY3RzL1twcm9qZWN0SWRdL3Byb2plY3RsZXRzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWxvYS1wcm9qZWN0cy9bcHJvamVjdElkXS9wcm9qZWN0bGV0c1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYWxvYS1wcm9qZWN0cy9bcHJvamVjdElkXS9wcm9qZWN0bGV0cy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9yb3NzcGFsbWVyL1Jvc3MgR2l0SHViIFByb2plY3RzL2Fsb2Etd2ViLWRlc2lnbi1wcm9qZWN0LW1hbmFnZXIvYXBwL2FwaS9hbG9hLXByb2plY3RzL1twcm9qZWN0SWRdL3Byb2plY3RsZXRzL3JvdXRlLmpzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hbG9hLXByb2plY3RzL1twcm9qZWN0SWRdL3Byb2plY3RsZXRzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fprojectlets%2Froute&page=%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fprojectlets%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fprojectlets%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/aloa-projects/[projectId]/projectlets/route.js":
/*!****************************************************************!*\
  !*** ./app/api/aloa-projects/[projectId]/projectlets/route.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   PATCH: () => (/* binding */ PATCH),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./lib/supabase.js\");\n\n\nasync function GET(request, { params }) {\n    try {\n        const { projectId } = params;\n        // Get projectlets for this project\n        const { data: projectlets, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_projectlets\").select(`\n        *,\n        aloa_project_forms (\n          id,\n          title,\n          description,\n          form_type,\n          is_active,\n          responses_required,\n          responses_received\n        )\n      `).eq(\"project_id\", projectId).order(\"order_index\", {\n            ascending: true\n        });\n        if (error) {\n            console.error(\"Error fetching projectlets:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to fetch projectlets\"\n            }, {\n                status: 500\n            });\n        }\n        // Calculate completion percentage\n        const totalProjectlets = projectlets.length;\n        const completedProjectlets = projectlets.filter((p)=>p.status === \"completed\").length;\n        const completionPercentage = totalProjectlets > 0 ? Math.round(completedProjectlets / totalProjectlets * 100) : 0;\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            projectlets,\n            stats: {\n                total: totalProjectlets,\n                completed: completedProjectlets,\n                inProgress: projectlets.filter((p)=>p.status === \"in_progress\").length,\n                available: projectlets.filter((p)=>p.status === \"available\").length,\n                locked: projectlets.filter((p)=>p.status === \"locked\").length,\n                completionPercentage\n            }\n        });\n    } catch (error) {\n        console.error(\"Error in projectlets route:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Create new projectlet\nasync function POST(request, { params }) {\n    try {\n        const { projectId } = params;\n        const { name, description, type } = await request.json();\n        // Get the max order index for this project\n        const { data: maxOrder } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_projectlets\").select(\"order_index\").eq(\"project_id\", projectId).order(\"order_index\", {\n            ascending: false\n        }).limit(1).single();\n        const newOrderIndex = maxOrder ? maxOrder.order_index + 1 : 0;\n        // Create the new projectlet\n        const { data: newProjectlet, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_projectlets\").insert([\n            {\n                project_id: projectId,\n                name: name || `New Projectlet ${newOrderIndex + 1}`,\n                description: description || \"Click to edit description\",\n                type: type || \"design\",\n                status: \"available\",\n                order_index: newOrderIndex,\n                metadata: {}\n            }\n        ]).select().single();\n        if (error) {\n            console.error(\"Error creating projectlet:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to create projectlet\"\n            }, {\n                status: 500\n            });\n        }\n        // Add timeline event\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_project_timeline\").insert([\n            {\n                project_id: projectId,\n                projectlet_id: newProjectlet.id,\n                event_type: \"projectlet_created\",\n                description: `\"${newProjectlet.name}\" added to project`,\n                metadata: {}\n            }\n        ]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            projectlet: newProjectlet\n        });\n    } catch (error) {\n        console.error(\"Error creating projectlet:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Update projectlet status\nasync function PATCH(request, { params }) {\n    try {\n        const { projectId } = params;\n        const { projectletId, status, metadata } = await request.json();\n        // Update the projectlet\n        const { data: updatedProjectlet, error: updateError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_projectlets\").update({\n            status,\n            ...metadata && {\n                metadata\n            },\n            ...status === \"completed\" && {\n                completion_date: new Date().toISOString()\n            }\n        }).eq(\"id\", projectletId).eq(\"project_id\", projectId).select().single();\n        if (updateError) {\n            console.error(\"Error updating projectlet:\", updateError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to update projectlet\"\n            }, {\n                status: 500\n            });\n        }\n        // If projectlet is completed, check if we need to unlock the next one\n        if (status === \"completed\") {\n            // Get the next projectlet in sequence\n            const { data: nextProjectlet } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_projectlets\").select().eq(\"project_id\", projectId).eq(\"status\", \"locked\").gt(\"sequence_order\", updatedProjectlet.sequence_order).order(\"sequence_order\", {\n                ascending: true\n            }).limit(1).single();\n            if (nextProjectlet && nextProjectlet.unlock_condition?.type === \"previous_complete\") {\n                // Unlock the next projectlet\n                await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_projectlets\").update({\n                    status: \"available\"\n                }).eq(\"id\", nextProjectlet.id);\n                // Add timeline event\n                await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_project_timeline\").insert([\n                    {\n                        project_id: projectId,\n                        projectlet_id: nextProjectlet.id,\n                        event_type: \"projectlet_unlocked\",\n                        description: `\"${nextProjectlet.name}\" is now available`,\n                        metadata: {\n                            previous_projectlet: updatedProjectlet.name\n                        }\n                    }\n                ]);\n            }\n            // Add completion timeline event\n            await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_project_timeline\").insert([\n                {\n                    project_id: projectId,\n                    projectlet_id: projectletId,\n                    event_type: \"projectlet_completed\",\n                    description: `\"${updatedProjectlet.name}\" completed`,\n                    metadata: {\n                        completion_date: new Date().toISOString()\n                    }\n                }\n            ]);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            projectlet: updatedProjectlet\n        });\n    } catch (error) {\n        console.error(\"Error updating projectlet:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Update projectlet details (including form attachment)\nasync function PUT(request, { params }) {\n    try {\n        const { projectId } = params;\n        const { projectletId, name, description, type, formId, deadline, metadata } = await request.json();\n        // Build update object\n        const updateData = {};\n        if (name !== undefined) updateData.name = name;\n        if (description !== undefined) updateData.description = description;\n        if (type !== undefined) updateData.type = type;\n        if (deadline !== undefined) updateData.deadline = deadline;\n        if (metadata !== undefined) updateData.metadata = metadata;\n        // Update the projectlet\n        const { data: updatedProjectlet, error: updateError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_projectlets\").update(updateData).eq(\"id\", projectletId).eq(\"project_id\", projectId).select().single();\n        if (updateError) {\n            console.error(\"Error updating projectlet details:\", updateError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to update projectlet details\"\n            }, {\n                status: 500\n            });\n        }\n        // Handle form attachment/detachment\n        if (formId !== undefined) {\n            if (formId) {\n                // Check if a form is already attached\n                const { data: existingForm } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_project_forms\").select(\"id\").eq(\"projectlet_id\", projectletId).single();\n                if (existingForm) {\n                    // Update existing form attachment\n                    await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_project_forms\").update({\n                        form_id: formId\n                    }).eq(\"projectlet_id\", projectletId);\n                } else {\n                    // Create new form attachment\n                    await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_project_forms\").insert([\n                        {\n                            project_id: projectId,\n                            projectlet_id: projectletId,\n                            form_id: formId,\n                            title: updatedProjectlet.name + \" Form\",\n                            form_type: \"projectlet\",\n                            is_active: true\n                        }\n                    ]);\n                }\n                // Also update the form's project_id in the aloa_forms table\n                await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_forms\").update({\n                    aloa_project_id: projectId\n                }).eq(\"id\", formId);\n            } else {\n                // Remove form attachment if formId is null\n                await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_project_forms\").delete().eq(\"projectlet_id\", projectletId);\n            }\n        }\n        // Get updated projectlet with form info\n        const { data: projectletWithForm } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_projectlets\").select(`\n        *,\n        aloa_project_forms (\n          id,\n          form_id,\n          title,\n          description,\n          form_type,\n          is_active,\n          responses_required,\n          responses_received\n        )\n      `).eq(\"id\", projectletId).single();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            projectlet: projectletWithForm\n        });\n    } catch (error) {\n        console.error(\"Error updating projectlet details:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// DELETE - Delete a projectlet\nasync function DELETE(request, { params }) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const projectletId = searchParams.get(\"projectletId\");\n        if (!projectletId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Projectlet ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Delete the projectlet (cascade will handle related records)\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"aloa_projectlets\").delete().eq(\"id\", projectletId).eq(\"project_id\", params.projectId); // Extra safety check\n        if (error) {\n            console.error(\"Error deleting projectlet:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to delete projectlet\"\n            }, {\n                status: 500\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"Projectlet deleted successfully\"\n        });\n    } catch (error) {\n        console.error(\"Error in DELETE projectlet:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/aloa-projects/[projectId]/projectlets/route.js\n");

/***/ }),

/***/ "(rsc)/./lib/supabase.js":
/*!*************************!*\
  !*** ./lib/supabase.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://eycgzjqwowrdmjlzqqyg.supabase.co\" || 0;\n// Check for ANON_KEY first as it's the one that's actually set in the environment\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImV5Y2d6anF3b3dyZG1qbHpxcXlnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQwODcyMDIsImV4cCI6MjA2OTY2MzIwMn0.QfdUDAF8MweVTmJtrgnPiLWRdXz7hpFIzre-hiVay4E\" || 0 || 0;\n// Log what we're using (without exposing full key)\nif (false) {}\n// Only check for environment variables in production or when actually using the client\nlet supabase = null;\nif (supabaseUrl && supabaseKey) {\n    supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\n} else if (false) {}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7QUFFckQsTUFBTUMsY0FBY0MsMENBQW9DLElBQUk7QUFDNUQsa0ZBQWtGO0FBQ2xGLE1BQU1HLGNBQWNILGtOQUF5QyxJQUFJQSxDQUFnRCxJQUFJO0FBRXJILG1EQUFtRDtBQUNuRCxJQUFJLEtBQTBELEVBQWUsRUFPNUU7QUFFRCx1RkFBdUY7QUFDdkYsSUFBSVksV0FBVztBQUVmLElBQUliLGVBQWVJLGFBQWE7SUFDOUJTLFdBQVdkLG1FQUFZQSxDQUFDQyxhQUFhSTtBQUN2QyxPQUFPLElBQUlILEtBQXlCLEVBQWMsRUFFakQ7QUFFbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbG9hLXByb2plY3QtbWFuYWdlci8uL2xpYi9zdXBhYmFzZS5qcz8xNTk4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG5cbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIHx8ICcnO1xuLy8gQ2hlY2sgZm9yIEFOT05fS0VZIGZpcnN0IGFzIGl0J3MgdGhlIG9uZSB0aGF0J3MgYWN0dWFsbHkgc2V0IGluIHRoZSBlbnZpcm9ubWVudFxuY29uc3Qgc3VwYWJhc2VLZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSB8fCBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9QVUJMSVNIQUJMRV9LRVkgfHwgJyc7XG5cbi8vIExvZyB3aGF0IHdlJ3JlIHVzaW5nICh3aXRob3V0IGV4cG9zaW5nIGZ1bGwga2V5KVxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gIGNvbnNvbGUubG9nKCdTdXBhYmFzZSBjbGllbnQgY29uZmlnOicsIHtcbiAgICB1cmw6IHN1cGFiYXNlVXJsID8gJ3ByZXNlbnQnIDogJ21pc3NpbmcnLFxuICAgIGtleVNvdXJjZTogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkgPyAnQU5PTl9LRVknIDogXG4gICAgICAgICAgICAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9QVUJMSVNIQUJMRV9LRVkgPyAnUFVCTElTSEFCTEVfS0VZJyA6ICdtaXNzaW5nJyxcbiAgICBrZXlQcmVmaXg6IHN1cGFiYXNlS2V5ID8gc3VwYWJhc2VLZXkuc3Vic3RyaW5nKDAsIDIwKSArICcuLi4nIDogJ21pc3NpbmcnXG4gIH0pO1xufVxuXG4vLyBPbmx5IGNoZWNrIGZvciBlbnZpcm9ubWVudCB2YXJpYWJsZXMgaW4gcHJvZHVjdGlvbiBvciB3aGVuIGFjdHVhbGx5IHVzaW5nIHRoZSBjbGllbnRcbmxldCBzdXBhYmFzZSA9IG51bGw7XG5cbmlmIChzdXBhYmFzZVVybCAmJiBzdXBhYmFzZUtleSkge1xuICBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VLZXkpO1xufSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGNvbnNvbGUuZXJyb3IoJ1dhcm5pbmc6IFN1cGFiYXNlIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgbWlzc2luZycpO1xufVxuXG5leHBvcnQgeyBzdXBhYmFzZSB9OyJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUtleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfUFVCTElTSEFCTEVfS0VZIiwiY29uc29sZSIsImxvZyIsInVybCIsImtleVNvdXJjZSIsImtleVByZWZpeCIsInN1YnN0cmluZyIsInN1cGFiYXNlIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@supabase","vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fprojectlets%2Froute&page=%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fprojectlets%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faloa-projects%2F%5BprojectId%5D%2Fprojectlets%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();