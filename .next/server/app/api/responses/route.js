"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/responses/route";
exports.ids = ["app/api/responses/route"];
exports.modules = {

/***/ "jsdom":
/*!************************!*\
  !*** external "jsdom" ***!
  \************************/
/***/ ((module) => {

module.exports = require("jsdom");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fresponses%2Froute&page=%2Fapi%2Fresponses%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fresponses%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Fcustom-forms%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Fcustom-forms&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fresponses%2Froute&page=%2Fapi%2Fresponses%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fresponses%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Fcustom-forms%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Fcustom-forms&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_rosspalmer_Ross_GitHub_Projects_custom_forms_app_api_responses_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/responses/route.js */ \"(rsc)/./app/api/responses/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/responses/route\",\n        pathname: \"/api/responses\",\n        filename: \"route\",\n        bundlePath: \"app/api/responses/route\"\n    },\n    resolvedPagePath: \"/Users/rosspalmer/Ross GitHub Projects/custom-forms/app/api/responses/route.js\",\n    nextConfigOutput,\n    userland: _Users_rosspalmer_Ross_GitHub_Projects_custom_forms_app_api_responses_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/responses/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZyZXNwb25zZXMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnJlc3BvbnNlcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnJlc3BvbnNlcyUyRnJvdXRlLmpzJmFwcERpcj0lMkZVc2VycyUyRnJvc3NwYWxtZXIlMkZSb3NzJTIwR2l0SHViJTIwUHJvamVjdHMlMkZjdXN0b20tZm9ybXMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGcm9zc3BhbG1lciUyRlJvc3MlMjBHaXRIdWIlMjBQcm9qZWN0cyUyRmN1c3RvbS1mb3JtcyZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDOEI7QUFDM0c7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jdXN0b20tZm9ybXMvPzBjNjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3Jvc3NwYWxtZXIvUm9zcyBHaXRIdWIgUHJvamVjdHMvY3VzdG9tLWZvcm1zL2FwcC9hcGkvcmVzcG9uc2VzL3JvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9yZXNwb25zZXMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9yZXNwb25zZXNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3Jlc3BvbnNlcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9yb3NzcGFsbWVyL1Jvc3MgR2l0SHViIFByb2plY3RzL2N1c3RvbS1mb3Jtcy9hcHAvYXBpL3Jlc3BvbnNlcy9yb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvcmVzcG9uc2VzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fresponses%2Froute&page=%2Fapi%2Fresponses%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fresponses%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Fcustom-forms%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Fcustom-forms&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/responses/route.js":
/*!************************************!*\
  !*** ./app/api/responses/route.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./lib/supabase.js\");\n/* harmony import */ var _lib_email__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/email */ \"(rsc)/./lib/email.js\");\n/* harmony import */ var _lib_security__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/security */ \"(rsc)/./lib/security.js\");\n\n\n\n\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const formId = searchParams.get(\"formId\");\n        if (!formId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Form ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate UUID format to prevent SQL injection\n        const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n        if (!uuidRegex.test(formId)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid form ID format\"\n            }, {\n                status: 400\n            });\n        }\n        // Fetch responses with their answers joined with field names\n        const { data: responses, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"form_responses\").select(`\n        *,\n        form_response_answers (\n          id,\n          value,\n          form_fields (\n            field_name,\n            field_label\n          )\n        )\n      `).eq(\"form_id\", formId).order(\"submitted_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        // Format responses for compatibility - create plain object for data\n        const formattedResponses = responses.map((response)=>{\n            const dataObject = {};\n            response.form_response_answers?.forEach((answer)=>{\n                if (answer.form_fields?.field_name) {\n                    // Parse JSON values for arrays/objects\n                    try {\n                        const parsedValue = JSON.parse(answer.value);\n                        dataObject[answer.form_fields.field_name] = parsedValue;\n                    } catch  {\n                        // If not JSON, use as-is\n                        dataObject[answer.form_fields.field_name] = answer.value;\n                    }\n                }\n            });\n            return {\n                ...response,\n                _id: response.id,\n                formId: response.form_id,\n                submittedAt: response.submitted_at,\n                data: dataObject\n            };\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(formattedResponses);\n    } catch (error) {\n        console.error(\"Error fetching responses:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch responses\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        // Validate form ID\n        if (!body.formId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Form ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate UUID format to prevent SQL injection\n        const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n        if (!uuidRegex.test(body.formId)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid form ID format\"\n            }, {\n                status: 400\n            });\n        }\n        // Verify CSRF token for state-changing operations\n        const csrfToken = request.headers.get(\"X-CSRF-Token\");\n        const cookieToken = request.cookies.get(\"csrf-token\")?.value;\n        if (!csrfToken || !cookieToken || csrfToken !== cookieToken) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid CSRF token\"\n            }, {\n                status: 403\n            });\n        }\n        // First, create the response record\n        const responseData = {\n            form_id: body.formId\n        };\n        const { data: response, error: responseError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"form_responses\").insert([\n            responseData\n        ]).select().single();\n        if (responseError) throw responseError;\n        // Get the form fields to map field names to IDs\n        const { data: fields, error: fieldsError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"form_fields\").select(\"id, field_name\").eq(\"form_id\", body.formId);\n        if (fieldsError) throw fieldsError;\n        // Create a map of field names to IDs\n        const fieldMap = new Map();\n        fields.forEach((field)=>{\n            fieldMap.set(field.field_name, field.id);\n        });\n        // Get field details for validation\n        const { data: fieldDetails, error: fieldDetailsError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"form_fields\").select(\"id, field_name, field_type, required, validation\").eq(\"form_id\", body.formId);\n        if (fieldDetailsError) throw fieldDetailsError;\n        // Create field detail map\n        const fieldDetailMap = new Map();\n        fieldDetails.forEach((field)=>{\n            fieldDetailMap.set(field.field_name, field);\n        });\n        // Convert and sanitize the form data\n        const dataToStore = body.data instanceof Map ? body.data : new Map(Object.entries(body.data || {}));\n        console.log(\"Form data received:\", body.data);\n        console.log(\"Field mapping:\", Array.from(fieldMap.entries()));\n        const answers = [];\n        const errors = [];\n        dataToStore.forEach((value, fieldName)=>{\n            const fieldId = fieldMap.get(fieldName);\n            const fieldDetail = fieldDetailMap.get(fieldName);\n            if (fieldId && value !== undefined && value !== null && value !== \"\") {\n                let sanitizedValue;\n                try {\n                    // Sanitize based on field type\n                    switch(fieldDetail?.field_type){\n                        case \"email\":\n                            sanitizedValue = (0,_lib_security__WEBPACK_IMPORTED_MODULE_3__.sanitizeEmail)(value);\n                            break;\n                        case \"url\":\n                            sanitizedValue = (0,_lib_security__WEBPACK_IMPORTED_MODULE_3__.sanitizeURL)(value);\n                            break;\n                        case \"number\":\n                        case \"rating\":\n                            const num = (0,_lib_security__WEBPACK_IMPORTED_MODULE_3__.sanitizeNumber)(value, fieldDetail?.validation?.min || 0, fieldDetail?.validation?.max || Number.MAX_SAFE_INTEGER);\n                            sanitizedValue = String(num);\n                            break;\n                        case \"checkbox\":\n                        case \"multiselect\":\n                            const arrayValue = Array.isArray(value) ? value : [\n                                value\n                            ];\n                            const sanitizedArray = (0,_lib_security__WEBPACK_IMPORTED_MODULE_3__.sanitizeArray)(arrayValue, fieldDetail?.validation?.options);\n                            sanitizedValue = JSON.stringify(sanitizedArray);\n                            break;\n                        case \"text\":\n                        case \"textarea\":\n                        case \"tel\":\n                        case \"select\":\n                        case \"radio\":\n                        case \"date\":\n                        default:\n                            sanitizedValue = (0,_lib_security__WEBPACK_IMPORTED_MODULE_3__.sanitizeText)(String(value));\n                            // Limit text length\n                            const maxLength = fieldDetail?.validation?.maxLength || 10000;\n                            if (sanitizedValue.length > maxLength) {\n                                sanitizedValue = sanitizedValue.substring(0, maxLength);\n                            }\n                            break;\n                    }\n                    answers.push({\n                        response_id: response.id,\n                        field_id: fieldId,\n                        value: sanitizedValue\n                    });\n                    console.log(`Storing sanitized answer for field ${fieldName} (ID: ${fieldId})`);\n                } catch (error) {\n                    errors.push(`Invalid value for field ${fieldName}: ${error.message}`);\n                }\n            } else if (!fieldId) {\n                console.warn(`Field name '${fieldName}' not found in field map`);\n            } else if (fieldDetail?.required && !value) {\n                errors.push(`Required field ${fieldName} is missing`);\n            }\n        });\n        // Check for validation errors\n        if (errors.length > 0) {\n            // Rollback by deleting the response\n            await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"form_responses\").delete().eq(\"id\", response.id);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Validation failed\",\n                details: errors\n            }, {\n                status: 400\n            });\n        }\n        // Insert all answers\n        if (answers.length > 0) {\n            console.log(`Inserting ${answers.length} answers for response ${response.id}`);\n            const { error: answersError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"form_response_answers\").insert(answers);\n            if (answersError) {\n                console.error(\"Error inserting answers:\", answersError);\n                // Rollback by deleting the response\n                await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"form_responses\").delete().eq(\"id\", response.id);\n                throw answersError;\n            }\n            console.log(\"Answers inserted successfully\");\n        } else {\n            console.warn(\"No answers to insert - form data may be empty\");\n        }\n        // Fetch the form details for the email\n        const { data: form, error: formError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"forms\").select(`\n        *,\n        form_fields (\n          id,\n          field_name,\n          field_label,\n          field_type,\n          field_order,\n          validation\n        )\n      `).eq(\"id\", body.formId).single();\n        if (!formError && form) {\n            // Send email notification\n            try {\n                const emailResult = await (0,_lib_email__WEBPACK_IMPORTED_MODULE_2__.sendFormResponseEmail)({\n                    form: {\n                        id: form.id,\n                        title: form.title,\n                        fields: form.form_fields.sort((a, b)=>(a.field_order || 0) - (b.field_order || 0))\n                    },\n                    responses: body.data,\n                    recipientEmail: form.notification_email || \"ross@aloa.agency\"\n                });\n                if (emailResult.success) {\n                    console.log(\"Email notification sent successfully\");\n                } else {\n                    console.error(\"Failed to send email notification:\", emailResult.error);\n                }\n            } catch (emailError) {\n                console.error(\"Error sending email notification:\", emailError);\n            // Don't fail the response submission if email fails\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ...response,\n            _id: response.id,\n            formId: response.form_id,\n            submittedAt: response.submitted_at\n        });\n    } catch (error) {\n        console.error(\"Error creating response:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to save response\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/responses/route.js\n");

/***/ }),

/***/ "(rsc)/./lib/email.js":
/*!**********************!*\
  !*** ./lib/email.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   sendFormResponseEmail: () => (/* binding */ sendFormResponseEmail)\n/* harmony export */ });\n/* harmony import */ var resend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! resend */ \"(rsc)/./node_modules/resend/dist/index.mjs\");\n/* harmony import */ var _security__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./security */ \"(rsc)/./lib/security.js\");\n\n\nconst resend = process.env.RESEND_API_KEY ? new resend__WEBPACK_IMPORTED_MODULE_0__.Resend(process.env.RESEND_API_KEY) : null;\nasync function sendFormResponseEmail({ form, responses, recipientEmail }) {\n    try {\n        // Skip email sending if no API key is configured\n        if (!resend) {\n            console.log(\"Email notifications disabled: RESEND_API_KEY not configured\");\n            return {\n                success: true,\n                skipped: true,\n                message: \"Email notifications not configured\"\n            };\n        }\n        // Sanitize recipient email to prevent header injection\n        let sanitizedRecipient;\n        try {\n            sanitizedRecipient = recipientEmail ? (0,_security__WEBPACK_IMPORTED_MODULE_1__.sanitizeEmail)(recipientEmail) : \"ross@aloa.agency\";\n        } catch (error) {\n            console.error(\"Invalid recipient email:\", error);\n            sanitizedRecipient = \"ross@aloa.agency\"; // Fallback to default\n        }\n        // Sanitize form title to prevent injection in subject\n        const sanitizedTitle = (0,_security__WEBPACK_IMPORTED_MODULE_1__.sanitizeText)(form.title || \"Untitled Form\").replace(/[\\n\\r]/g, \"\").substring(0, 100);\n        // Format the responses into a clean HTML email\n        const htmlContent = generateEmailHTML(form, responses);\n        const data = await resend.emails.send({\n            from: \"Aloa Forms <onboarding@resend.dev>\",\n            to: sanitizedRecipient,\n            subject: `New Response: ${sanitizedTitle}`,\n            html: htmlContent\n        });\n        return {\n            success: true,\n            data\n        };\n    } catch (error) {\n        console.error(\"Error sending email:\", error);\n        return {\n            success: false,\n            error\n        };\n    }\n}\nfunction generateEmailHTML(form, responses) {\n    const timestamp = new Date().toLocaleString(\"en-US\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        timeZoneName: \"short\"\n    });\n    return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>Form Response</title>\n      <style>\n        body {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n          line-height: 1.6;\n          color: #333;\n          max-width: 600px;\n          margin: 0 auto;\n          padding: 20px;\n          background-color: #f5f5f5;\n        }\n        .email-container {\n          background: white;\n          border-radius: 12px;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n          overflow: hidden;\n        }\n        .header {\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          padding: 30px;\n          text-align: center;\n        }\n        .header h1 {\n          margin: 0;\n          font-size: 24px;\n          font-weight: 600;\n        }\n        .header p {\n          margin: 10px 0 0 0;\n          opacity: 0.9;\n          font-size: 14px;\n        }\n        .content {\n          padding: 30px;\n        }\n        .response-section {\n          margin-bottom: 25px;\n          padding-bottom: 25px;\n          border-bottom: 1px solid #e5e5e5;\n        }\n        .response-section:last-child {\n          border-bottom: none;\n          padding-bottom: 0;\n        }\n        .section-title {\n          color: #667eea;\n          font-size: 12px;\n          font-weight: 600;\n          text-transform: uppercase;\n          letter-spacing: 1px;\n          margin-bottom: 15px;\n        }\n        .field {\n          margin-bottom: 20px;\n        }\n        .field-label {\n          font-weight: 600;\n          color: #555;\n          margin-bottom: 5px;\n          font-size: 14px;\n        }\n        .field-value {\n          color: #333;\n          font-size: 15px;\n          padding: 10px;\n          background: #f8f9fa;\n          border-radius: 6px;\n          border-left: 3px solid #667eea;\n        }\n        .field-value.empty {\n          color: #999;\n          font-style: italic;\n          border-left-color: #ddd;\n        }\n        .footer {\n          background: #f8f9fa;\n          padding: 20px 30px;\n          text-align: center;\n          font-size: 12px;\n          color: #666;\n        }\n        .footer a {\n          color: #667eea;\n          text-decoration: none;\n        }\n        .timestamp {\n          background: #f0f0f0;\n          padding: 10px 30px;\n          font-size: 13px;\n          color: #666;\n          border-top: 1px solid #e5e5e5;\n        }\n        .logo {\n          width: 120px;\n          height: auto;\n          margin-bottom: 15px;\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"email-container\">\n        <div class=\"header\">\n          <img src=\"https://images.ctfassets.net/qkznfzcikv51/xWpsUAypBrRgAjmbyLGYy/b969f4353174e4f209996ebf60af8f7c/aloa_-_white.svg\" alt=\"Aloa\" class=\"logo\">\n          <h1>New Form Response</h1>\n          <p>${(0,_security__WEBPACK_IMPORTED_MODULE_1__.sanitizeHTML)(form.title || \"Untitled Form\")}</p>\n        </div>\n        \n        <div class=\"timestamp\">\n          <strong>Submitted:</strong> ${timestamp}\n        </div>\n        \n        <div class=\"content\">\n          ${generateResponseFields(form.fields, responses)}\n        </div>\n        \n        <div class=\"footer\">\n          <p>\n            This response was submitted via your custom form.<br>\n            <a href=\"${process.env.NEXT_PUBLIC_BASE_URL || \"https://custom-forms-xi.vercel.app\"}/responses/${form.id}\">\n              View all responses →\n            </a>\n          </p>\n          <p style=\"margin-top: 15px; color: #999;\">\n            Powered by <strong>Aloa® Agency</strong>\n          </p>\n        </div>\n      </div>\n    </body>\n    </html>\n  `;\n}\nfunction generateResponseFields(fields, responses) {\n    // Group fields by section\n    const sections = {};\n    fields.forEach((field)=>{\n        const section = field.validation?.section || \"General Information\";\n        if (!sections[section]) {\n            sections[section] = [];\n        }\n        sections[section].push(field);\n    });\n    let html = \"\";\n    Object.entries(sections).forEach(([sectionName, sectionFields])=>{\n        html += `\n      <div class=\"response-section\">\n        <div class=\"section-title\">${(0,_security__WEBPACK_IMPORTED_MODULE_1__.sanitizeHTML)(sectionName)}</div>\n    `;\n        sectionFields.forEach((field)=>{\n            const value = responses[field.field_name] || responses[field.name];\n            const displayValue = formatFieldValue(value, field);\n            const sanitizedLabel = (0,_security__WEBPACK_IMPORTED_MODULE_1__.sanitizeHTML)(field.field_label || field.label || \"Unnamed Field\");\n            html += `\n        <div class=\"field\">\n          <div class=\"field-label\">${sanitizedLabel}</div>\n          <div class=\"field-value ${!displayValue ? \"empty\" : \"\"}\">\n            ${displayValue || \"No response provided\"}\n          </div>\n        </div>\n      `;\n        });\n        html += \"</div>\";\n    });\n    return html;\n}\nfunction formatFieldValue(value, field) {\n    if (!value) return \"\";\n    // Handle arrays (checkboxes, multi-select)\n    if (Array.isArray(value)) {\n        if (value.length === 0) return \"\";\n        return value.map((v)=>`• ${(0,_security__WEBPACK_IMPORTED_MODULE_1__.sanitizeHTML)(String(v))}`).join(\"<br>\");\n    }\n    // Handle rating fields\n    if (field.field_type === \"rating\" || field.type === \"rating\") {\n        const rating = parseInt(value, 10);\n        if (isNaN(rating) || rating < 0 || rating > 5) {\n            return \"Invalid rating\";\n        }\n        return `${rating} / 5 ⭐`;\n    }\n    // Handle long text with line breaks - sanitize to prevent XSS\n    if (typeof value === \"string\") {\n        const sanitized = (0,_security__WEBPACK_IMPORTED_MODULE_1__.sanitizeHTML)(value);\n        if (value.includes(\"\\n\")) {\n            return sanitized.replace(/\\n/g, \"<br>\");\n        }\n        return sanitized;\n    }\n    return (0,_security__WEBPACK_IMPORTED_MODULE_1__.sanitizeHTML)(String(value));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    sendFormResponseEmail\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/email.js\n");

/***/ }),

/***/ "(rsc)/./lib/security.js":
/*!*************************!*\
  !*** ./lib/security.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RateLimiter: () => (/* binding */ RateLimiter),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   generateSecureToken: () => (/* binding */ generateSecureToken),\n/* harmony export */   sanitizeArray: () => (/* binding */ sanitizeArray),\n/* harmony export */   sanitizeEmail: () => (/* binding */ sanitizeEmail),\n/* harmony export */   sanitizeFieldName: () => (/* binding */ sanitizeFieldName),\n/* harmony export */   sanitizeFileName: () => (/* binding */ sanitizeFileName),\n/* harmony export */   sanitizeHTML: () => (/* binding */ sanitizeHTML),\n/* harmony export */   sanitizeNumber: () => (/* binding */ sanitizeNumber),\n/* harmony export */   sanitizeSQLIdentifier: () => (/* binding */ sanitizeSQLIdentifier),\n/* harmony export */   sanitizeText: () => (/* binding */ sanitizeText),\n/* harmony export */   sanitizeURL: () => (/* binding */ sanitizeURL),\n/* harmony export */   validateCSRFToken: () => (/* binding */ validateCSRFToken),\n/* harmony export */   validateFileUpload: () => (/* binding */ validateFileUpload)\n/* harmony export */ });\n/* harmony import */ var isomorphic_dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! isomorphic-dompurify */ \"(rsc)/./node_modules/isomorphic-dompurify/index.js\");\n/* harmony import */ var isomorphic_dompurify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(isomorphic_dompurify__WEBPACK_IMPORTED_MODULE_0__);\n\n// Input validation and sanitization utilities\n/**\n * Sanitize HTML content to prevent XSS attacks\n */ function sanitizeHTML(dirty) {\n    if (!dirty) return \"\";\n    // Configure DOMPurify to be very strict\n    const config = {\n        ALLOWED_TAGS: [\n            \"b\",\n            \"i\",\n            \"em\",\n            \"strong\",\n            \"a\",\n            \"p\",\n            \"br\"\n        ],\n        ALLOWED_ATTR: [\n            \"href\"\n        ],\n        ALLOW_DATA_ATTR: false,\n        ALLOW_UNKNOWN_PROTOCOLS: false,\n        SAFE_FOR_TEMPLATES: true,\n        WHOLE_DOCUMENT: false,\n        RETURN_DOM: false,\n        RETURN_DOM_FRAGMENT: false,\n        RETURN_TRUSTED_TYPE: false,\n        FORCE_BODY: false,\n        SANITIZE_DOM: true,\n        IN_PLACE: false,\n        USE_PROFILES: false,\n        ALLOW_ARIA_ATTR: false,\n        ALLOW_DATA_ATTR: false,\n        DISALLOWED_TAGS: [\n            \"script\",\n            \"style\",\n            \"iframe\",\n            \"object\",\n            \"embed\",\n            \"link\"\n        ]\n    };\n    return isomorphic_dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize(dirty, config);\n}\n/**\n * Sanitize plain text input (removes all HTML)\n */ function sanitizeText(input) {\n    if (!input) return \"\";\n    if (typeof input !== \"string\") {\n        input = String(input);\n    }\n    // Remove all HTML tags and decode HTML entities\n    const decoded = input.replace(/<[^>]*>/g, \"\") // Remove HTML tags\n    .replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&quot;/g, '\"').replace(/&#x27;/g, \"'\").replace(/&amp;/g, \"&\").trim();\n    // Remove any potential script injections\n    return decoded.replace(/javascript:/gi, \"\").replace(/on\\w+\\s*=/gi, \"\").replace(/<script[^>]*>.*?<\\/script>/gi, \"\").replace(/eval\\(/gi, \"\").replace(/expression\\(/gi, \"\");\n}\n/**\n * Validate and sanitize email addresses\n */ function sanitizeEmail(email) {\n    if (!email || typeof email !== \"string\") return \"\";\n    // Basic email validation regex\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    const sanitized = email.toLowerCase().trim();\n    if (!emailRegex.test(sanitized)) {\n        throw new Error(\"Invalid email format\");\n    }\n    // Additional check for common injection patterns\n    if (sanitized.includes(\"\\n\") || sanitized.includes(\"\\r\") || sanitized.includes(\"%0a\") || sanitized.includes(\"%0d\")) {\n        throw new Error(\"Invalid email format - possible injection attempt\");\n    }\n    return sanitized;\n}\n/**\n * Validate and sanitize URLs\n */ function sanitizeURL(url) {\n    if (!url || typeof url !== \"string\") return \"\";\n    try {\n        const parsed = new URL(url);\n        // Only allow http(s) and mailto protocols\n        if (![\n            \"http:\",\n            \"https:\",\n            \"mailto:\"\n        ].includes(parsed.protocol)) {\n            throw new Error(\"Invalid URL protocol\");\n        }\n        // Prevent javascript: and data: URLs\n        if (url.toLowerCase().includes(\"javascript:\") || url.toLowerCase().includes(\"data:\")) {\n            throw new Error(\"Potentially malicious URL\");\n        }\n        return parsed.href;\n    } catch (error) {\n        throw new Error(\"Invalid URL format\");\n    }\n}\n/**\n * Sanitize file names to prevent directory traversal\n */ function sanitizeFileName(fileName) {\n    if (!fileName || typeof fileName !== \"string\") return \"\";\n    // Remove any path components and dangerous characters\n    return fileName.replace(/^.*[\\\\\\/]/, \"\") // Remove path\n    .replace(/\\.{2,}/g, \".\") // Remove multiple dots\n    .replace(/[^a-zA-Z0-9._-]/g, \"_\") // Replace special chars with underscore\n    .substring(0, 255); // Limit length\n}\n/**\n * Validate and sanitize form field names (no special characters)\n */ function sanitizeFieldName(name) {\n    if (!name || typeof name !== \"string\") return \"\";\n    // Only allow alphanumeric, underscore, and hyphen\n    return name.replace(/[^a-zA-Z0-9_-]/g, \"_\").substring(0, 100);\n}\n/**\n * Validate numeric input\n */ function sanitizeNumber(input, min = null, max = null) {\n    const num = Number(input);\n    if (isNaN(num)) {\n        throw new Error(\"Invalid number format\");\n    }\n    if (min !== null && num < min) {\n        throw new Error(`Number must be at least ${min}`);\n    }\n    if (max !== null && num > max) {\n        throw new Error(`Number must be at most ${max}`);\n    }\n    return num;\n}\n/**\n * Sanitize array input (for checkboxes, multi-select)\n */ function sanitizeArray(input, allowedValues = null) {\n    if (!Array.isArray(input)) {\n        return [];\n    }\n    const sanitized = input.filter((item)=>item !== null && item !== undefined).map((item)=>sanitizeText(String(item)));\n    if (allowedValues && Array.isArray(allowedValues)) {\n        return sanitized.filter((item)=>allowedValues.includes(item));\n    }\n    return sanitized;\n}\n/**\n * Validate file upload\n */ function validateFileUpload(file, options = {}) {\n    const { maxSize = 10 * 1024 * 1024, allowedTypes = [\n        \"text/plain\",\n        \"text/markdown\",\n        \"text/x-markdown\",\n        \"application/x-markdown\"\n    ], allowedExtensions = [\n        \".txt\",\n        \".md\",\n        \".markdown\"\n    ] } = options;\n    if (!file) {\n        throw new Error(\"No file provided\");\n    }\n    // Check file size\n    if (file.size > maxSize) {\n        throw new Error(`File size exceeds maximum allowed size of ${maxSize / 1024 / 1024}MB`);\n    }\n    // Check file type\n    if (allowedTypes.length > 0 && !allowedTypes.includes(file.type)) {\n        throw new Error(\"File type not allowed\");\n    }\n    // Check file extension\n    const fileName = file.name || \"\";\n    const hasValidExtension = allowedExtensions.some((ext)=>fileName.toLowerCase().endsWith(ext));\n    if (!hasValidExtension) {\n        throw new Error(\"File extension not allowed\");\n    }\n    // Check for double extensions that might bypass filters\n    if (fileName.split(\".\").length > 2) {\n        const parts = fileName.split(\".\");\n        const beforeLast = parts[parts.length - 2];\n        const suspiciousExtensions = [\n            \"exe\",\n            \"js\",\n            \"php\",\n            \"asp\",\n            \"jsp\"\n        ];\n        if (suspiciousExtensions.includes(beforeLast.toLowerCase())) {\n            throw new Error(\"Suspicious file name detected\");\n        }\n    }\n    return true;\n}\n/**\n * Generate a secure random token\n */ function generateSecureToken(length = 32) {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let token = \"\";\n    if (false) {} else {\n        // Server-side fallback\n        const crypto = __webpack_require__(/*! crypto */ \"crypto\");\n        for(let i = 0; i < length; i++){\n            token += chars[crypto.randomInt(chars.length)];\n        }\n    }\n    return token;\n}\n/**\n * Validate CSRF token\n */ function validateCSRFToken(requestToken, sessionToken) {\n    if (!requestToken || !sessionToken) {\n        return false;\n    }\n    // Use timing-safe comparison to prevent timing attacks\n    if (requestToken.length !== sessionToken.length) {\n        return false;\n    }\n    let result = 0;\n    for(let i = 0; i < requestToken.length; i++){\n        result |= requestToken.charCodeAt(i) ^ sessionToken.charCodeAt(i);\n    }\n    return result === 0;\n}\n/**\n * Sanitize SQL identifiers (table names, column names)\n * Note: Prefer parameterized queries instead of this\n */ function sanitizeSQLIdentifier(identifier) {\n    if (!identifier || typeof identifier !== \"string\") return \"\";\n    // Only allow alphanumeric and underscore\n    const sanitized = identifier.replace(/[^a-zA-Z0-9_]/g, \"\");\n    // Ensure it doesn't start with a number\n    if (/^\\d/.test(sanitized)) {\n        return \"_\" + sanitized;\n    }\n    return sanitized.substring(0, 64); // Limit length\n}\n/**\n * Rate limit check helper\n */ class RateLimiter {\n    constructor(maxRequests = 10, windowMs = 60000){\n        this.maxRequests = maxRequests;\n        this.windowMs = windowMs;\n        this.requests = new Map();\n    }\n    check(identifier) {\n        const now = Date.now();\n        const windowStart = now - this.windowMs;\n        if (!this.requests.has(identifier)) {\n            this.requests.set(identifier, []);\n        }\n        const timestamps = this.requests.get(identifier);\n        // Remove old timestamps\n        const validTimestamps = timestamps.filter((ts)=>ts > windowStart);\n        if (validTimestamps.length >= this.maxRequests) {\n            return false; // Rate limit exceeded\n        }\n        validTimestamps.push(now);\n        this.requests.set(identifier, validTimestamps);\n        // Clean up old entries periodically\n        if (Math.random() < 0.01) {\n            this.cleanup();\n        }\n        return true;\n    }\n    cleanup() {\n        const now = Date.now();\n        const windowStart = now - this.windowMs;\n        for (const [identifier, timestamps] of this.requests.entries()){\n            const validTimestamps = timestamps.filter((ts)=>ts > windowStart);\n            if (validTimestamps.length === 0) {\n                this.requests.delete(identifier);\n            } else {\n                this.requests.set(identifier, validTimestamps);\n            }\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    sanitizeHTML,\n    sanitizeText,\n    sanitizeEmail,\n    sanitizeURL,\n    sanitizeFileName,\n    sanitizeFieldName,\n    sanitizeNumber,\n    sanitizeArray,\n    validateFileUpload,\n    generateSecureToken,\n    validateCSRFToken,\n    sanitizeSQLIdentifier,\n    RateLimiter\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/security.js\n");

/***/ }),

/***/ "(rsc)/./lib/supabase.js":
/*!*************************!*\
  !*** ./lib/supabase.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://eycgzjqwowrdmjlzqqyg.supabase.co\" || 0;\nconst supabasePublishableKey = \"sb_publishable_eG0lH_ACpyOjqG44mN_5PA_1-oFLr5n\" || 0;\n// Only check for environment variables in production or when actually using the client\nlet supabase = null;\nif (supabaseUrl && supabasePublishableKey) {\n    supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabasePublishableKey);\n} else if (false) {}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7QUFFckQsTUFBTUMsY0FBY0MsMENBQW9DLElBQUk7QUFDNUQsTUFBTUcseUJBQXlCSCxnREFBZ0QsSUFBSTtBQUVuRix1RkFBdUY7QUFDdkYsSUFBSUssV0FBVztBQUVmLElBQUlOLGVBQWVJLHdCQUF3QjtJQUN6Q0UsV0FBV1AsbUVBQVlBLENBQUNDLGFBQWFJO0FBQ3ZDLE9BQU8sSUFBSUgsS0FBeUIsRUFBYyxFQUVqRDtBQUVtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2N1c3RvbS1mb3Jtcy8uL2xpYi9zdXBhYmFzZS5qcz8xNTk4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG5cbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIHx8ICcnO1xuY29uc3Qgc3VwYWJhc2VQdWJsaXNoYWJsZUtleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1BVQkxJU0hBQkxFX0tFWSB8fCAnJztcblxuLy8gT25seSBjaGVjayBmb3IgZW52aXJvbm1lbnQgdmFyaWFibGVzIGluIHByb2R1Y3Rpb24gb3Igd2hlbiBhY3R1YWxseSB1c2luZyB0aGUgY2xpZW50XG5sZXQgc3VwYWJhc2UgPSBudWxsO1xuXG5pZiAoc3VwYWJhc2VVcmwgJiYgc3VwYWJhc2VQdWJsaXNoYWJsZUtleSkge1xuICBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VQdWJsaXNoYWJsZUtleSk7XG59IGVsc2UgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgY29uc29sZS5lcnJvcignV2FybmluZzogU3VwYWJhc2UgZW52aXJvbm1lbnQgdmFyaWFibGVzIGFyZSBtaXNzaW5nJyk7XG59XG5cbmV4cG9ydCB7IHN1cGFiYXNlIH07Il0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsInN1cGFiYXNlUHVibGlzaGFibGVLZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9QVUJMSVNIQUJMRV9LRVkiLCJzdXBhYmFzZSIsImNvbnNvbGUiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/dompurify","vendor-chunks/resend","vendor-chunks/isomorphic-dompurify"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fresponses%2Froute&page=%2Fapi%2Fresponses%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fresponses%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Fcustom-forms%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Fcustom-forms&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();