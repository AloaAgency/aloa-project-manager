"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/users/route";
exports.ids = ["app/api/auth/users/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Fusers%2Froute&page=%2Fapi%2Fauth%2Fusers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fusers%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Fusers%2Froute&page=%2Fapi%2Fauth%2Fusers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fusers%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_rosspalmer_Ross_GitHub_Projects_aloa_web_design_project_manager_app_api_auth_users_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/auth/users/route.js */ \"(rsc)/./app/api/auth/users/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/users/route\",\n        pathname: \"/api/auth/users\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/users/route\"\n    },\n    resolvedPagePath: \"/Users/rosspalmer/Ross GitHub Projects/aloa-web-design-project-manager/app/api/auth/users/route.js\",\n    nextConfigOutput,\n    userland: _Users_rosspalmer_Ross_GitHub_Projects_aloa_web_design_project_manager_app_api_auth_users_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/auth/users/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhdXRoJTJGdXNlcnMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmF1dGglMkZ1c2VycyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmF1dGglMkZ1c2VycyUyRnJvdXRlLmpzJmFwcERpcj0lMkZVc2VycyUyRnJvc3NwYWxtZXIlMkZSb3NzJTIwR2l0SHViJTIwUHJvamVjdHMlMkZhbG9hLXdlYi1kZXNpZ24tcHJvamVjdC1tYW5hZ2VyJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnJvc3NwYWxtZXIlMkZSb3NzJTIwR2l0SHViJTIwUHJvamVjdHMlMkZhbG9hLXdlYi1kZXNpZ24tcHJvamVjdC1tYW5hZ2VyJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNrRDtBQUMvSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2Fsb2EtcHJvamVjdC1tYW5hZ2VyLz8zMGZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9yb3NzcGFsbWVyL1Jvc3MgR2l0SHViIFByb2plY3RzL2Fsb2Etd2ViLWRlc2lnbi1wcm9qZWN0LW1hbmFnZXIvYXBwL2FwaS9hdXRoL3VzZXJzL3JvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hdXRoL3VzZXJzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYXV0aC91c2Vyc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYXV0aC91c2Vycy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9yb3NzcGFsbWVyL1Jvc3MgR2l0SHViIFByb2plY3RzL2Fsb2Etd2ViLWRlc2lnbi1wcm9qZWN0LW1hbmFnZXIvYXBwL2FwaS9hdXRoL3VzZXJzL3JvdXRlLmpzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hdXRoL3VzZXJzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Fusers%2Froute&page=%2Fapi%2Fauth%2Fusers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fusers%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/auth/users/route.js":
/*!*************************************!*\
  !*** ./app/api/auth/users/route.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   PATCH: () => (/* binding */ PATCH),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/ssr */ \"(rsc)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n\n\n\n\n// Force dynamic rendering for routes that use cookies\nconst dynamic = \"force-dynamic\";\n// GET - List all users (super admin only)\nasync function GET(request) {\n    try {\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_2__.cookies)();\n        // Create Supabase client with service role for bypassing RLS\n        const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_1__.createServerClient)(\"https://eycgzjqwowrdmjlzqqyg.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_SECRET_KEY, {\n            cookies: {\n                get (name) {\n                    return cookieStore.get(name)?.value;\n                },\n                set () {},\n                remove () {}\n            }\n        });\n        // Check if user is authenticated and is super admin\n        const { data: { user }, error: authError } = await supabase.auth.getUser();\n        if (authError || !user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        // Get user's profile to check role\n        const { data: profile, error: profileError } = await supabase.from(\"aloa_user_profiles\").select(\"role\").eq(\"id\", user.id).single();\n        // Allow super_admin and project_admin to see users (but project_admin only sees clients)\n        if (profileError || ![\n            \"super_admin\",\n            \"project_admin\"\n        ].includes(profile?.role)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Forbidden - Admin access required\"\n            }, {\n                status: 403\n            });\n        }\n        // Get users based on requester's role\n        let query = supabase.from(\"aloa_user_profiles\").select(`\n        id,\n        email,\n        full_name,\n        role,\n        created_at,\n        updated_at\n      `).order(\"created_at\", {\n            ascending: false\n        });\n        // If project_admin, only show client users\n        if (profile?.role === \"project_admin\") {\n            query = query.eq(\"role\", \"client\");\n        }\n        const { data: users, error: usersError } = await query;\n        if (usersError) {\n            console.error(\"Error fetching users:\", usersError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to fetch users\"\n            }, {\n                status: 500\n            });\n        }\n        // Get project assignments for all client-type users\n        const clientIds = users.filter((u)=>u.role === \"client\" || u.role === \"client_admin\" || u.role === \"client_participant\").map((u)=>u.id);\n        let projectAssignments = {};\n        if (clientIds.length > 0) {\n            // Create a service client to bypass RLS for fetching project members\n            const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_SECRET_KEY;\n            const serviceClient = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_3__.createClient)(\"https://eycgzjqwowrdmjlzqqyg.supabase.co\", serviceKey);\n            // Get from aloa_project_members table (where we actually store client assignments)\n            const { data: members, error: membersError } = await serviceClient.from(\"aloa_project_members\").select(\"user_id, project_id, aloa_projects(id, project_name, client_name)\").in(\"user_id\", clientIds).eq(\"project_role\", \"viewer\"); // Clients are stored as 'viewer' role\n            console.log(\"Members query with service client:\", {\n                members,\n                error: membersError\n            });\n            if (members) {\n                members.forEach((m)=>{\n                    if (!projectAssignments[m.user_id]) {\n                        projectAssignments[m.user_id] = [];\n                    }\n                    projectAssignments[m.user_id].push(m.aloa_projects);\n                });\n            }\n        }\n        // Add project info to users\n        const usersWithProjects = users.map((user)=>({\n                ...user,\n                projects: projectAssignments[user.id] || []\n            }));\n        // Debug: Log John G's data specifically\n        const johnG = usersWithProjects.find((u)=>u.email === \"exabyte@me.com\");\n        if (johnG) {\n            console.log(\"John G data being sent:\", JSON.stringify(johnG, null, 2));\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            users: usersWithProjects\n        });\n    } catch (error) {\n        console.error(\"Users API error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// POST - Create a new user (super admin only)\nasync function POST(request) {\n    try {\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_2__.cookies)();\n        const body = await request.json();\n        const { email, password, full_name, role = \"client\", project_id } = body;\n        // Validate required fields\n        if (!email || !password || !full_name) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Email, password, and full name are required\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate role\n        const validRoles = [\n            \"super_admin\",\n            \"project_admin\",\n            \"team_member\",\n            \"client\",\n            \"client_admin\",\n            \"client_participant\"\n        ];\n        if (!validRoles.includes(role)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid role. Must be one of: \" + validRoles.join(\", \")\n            }, {\n                status: 400\n            });\n        }\n        // Create Supabase client with service role\n        const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_1__.createServerClient)(\"https://eycgzjqwowrdmjlzqqyg.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_SECRET_KEY, {\n            cookies: {\n                get (name) {\n                    return cookieStore.get(name)?.value;\n                },\n                set () {},\n                remove () {}\n            }\n        });\n        // Check if requester is super admin\n        const { data: { user }, error: authError } = await supabase.auth.getUser();\n        if (authError || !user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const { data: profile } = await supabase.from(\"aloa_user_profiles\").select(\"role\").eq(\"id\", user.id).single();\n        if (profile?.role !== \"super_admin\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Forbidden - Super admin access required\"\n            }, {\n                status: 403\n            });\n        }\n        // Create the user account using admin API\n        const { data: newUser, error: createError } = await supabase.auth.admin.createUser({\n            email,\n            password,\n            email_confirm: true,\n            user_metadata: {\n                full_name\n            }\n        });\n        if (createError) {\n            console.error(\"Error creating user:\", createError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: createError.message || \"Failed to create user\"\n            }, {\n                status: 400\n            });\n        }\n        // Create or update the profile\n        const { error: profileError } = await supabase.from(\"aloa_user_profiles\").upsert({\n            id: newUser.user.id,\n            email: newUser.user.email,\n            full_name,\n            role\n        });\n        if (profileError) {\n            console.error(\"Error creating profile:\", profileError);\n            // Try to delete the user if profile creation failed\n            await supabase.auth.admin.deleteUser(newUser.user.id);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to create user profile\"\n            }, {\n                status: 500\n            });\n        }\n        // If role is any client type and project_id is provided, add them as stakeholder\n        if ((role === \"client\" || role === \"client_admin\" || role === \"client_participant\") && project_id) {\n            const { error: stakeholderError } = await supabase.from(\"aloa_project_stakeholders\").insert({\n                project_id,\n                user_id: newUser.user.id,\n                role: \"client\",\n                added_by: user.id\n            });\n            if (stakeholderError) {\n                console.error(\"Error adding stakeholder:\", stakeholderError);\n            // Don't fail the whole operation, just log the error\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            user: {\n                id: newUser.user.id,\n                email: newUser.user.email,\n                full_name,\n                role,\n                project_id: role === \"client\" || role === \"client_admin\" || role === \"client_participant\" ? project_id : null\n            }\n        });\n    } catch (error) {\n        console.error(\"Create user API error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// PATCH - Update user (super admin only)\nasync function PATCH(request) {\n    try {\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_2__.cookies)();\n        const body = await request.json();\n        const { user_id, updates } = body;\n        if (!user_id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Create Supabase client with service role\n        const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_1__.createServerClient)(\"https://eycgzjqwowrdmjlzqqyg.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_SECRET_KEY, {\n            cookies: {\n                get (name) {\n                    return cookieStore.get(name)?.value;\n                },\n                set () {},\n                remove () {}\n            }\n        });\n        // Check if requester is super admin\n        const { data: { user }, error: authError } = await supabase.auth.getUser();\n        if (authError || !user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const { data: profile } = await supabase.from(\"aloa_user_profiles\").select(\"role\").eq(\"id\", user.id).single();\n        if (profile?.role !== \"super_admin\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Forbidden - Super admin access required\"\n            }, {\n                status: 403\n            });\n        }\n        // Update the profile\n        const allowedUpdates = [\n            \"full_name\",\n            \"role\"\n        ];\n        const profileUpdates = {};\n        for (const key of allowedUpdates){\n            if (updates[key] !== undefined) {\n                profileUpdates[key] = updates[key];\n            }\n        }\n        if (Object.keys(profileUpdates).length > 0) {\n            const { error: updateError } = await supabase.from(\"aloa_user_profiles\").update(profileUpdates).eq(\"id\", user_id);\n            if (updateError) {\n                console.error(\"Error updating profile:\", updateError);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Failed to update user\"\n                }, {\n                    status: 500\n                });\n            }\n        }\n        // Update email if provided\n        if (updates.email) {\n            const { error: emailError } = await supabase.auth.admin.updateUserById(user_id, {\n                email: updates.email\n            });\n            if (emailError) {\n                console.error(\"Error updating email:\", emailError);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Failed to update email\"\n                }, {\n                    status: 500\n                });\n            }\n            // Also update email in profiles table\n            await supabase.from(\"aloa_user_profiles\").update({\n                email: updates.email\n            }).eq(\"id\", user_id);\n        }\n        // Update password if provided\n        if (updates.password) {\n            const { error: passwordError } = await supabase.auth.admin.updateUserById(user_id, {\n                password: updates.password\n            });\n            if (passwordError) {\n                console.error(\"Error updating password:\", passwordError);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Failed to update password\"\n                }, {\n                    status: 500\n                });\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true\n        });\n    } catch (error) {\n        console.error(\"Update user API error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// DELETE - Delete user (super admin only)\nasync function DELETE(request) {\n    try {\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_2__.cookies)();\n        const { searchParams } = new URL(request.url);\n        const user_id = searchParams.get(\"user_id\");\n        if (!user_id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Create Supabase client with service role\n        const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_1__.createServerClient)(\"https://eycgzjqwowrdmjlzqqyg.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_SECRET_KEY, {\n            cookies: {\n                get (name) {\n                    return cookieStore.get(name)?.value;\n                },\n                set () {},\n                remove () {}\n            }\n        });\n        // Check if requester is super admin\n        const { data: { user }, error: authError } = await supabase.auth.getUser();\n        if (authError || !user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const { data: profile } = await supabase.from(\"aloa_user_profiles\").select(\"role\").eq(\"id\", user.id).single();\n        if (profile?.role !== \"super_admin\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Forbidden - Super admin access required\"\n            }, {\n                status: 403\n            });\n        }\n        // Prevent deleting yourself\n        if (user_id === user.id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Cannot delete your own account\"\n            }, {\n                status: 400\n            });\n        }\n        // Delete the user (this will cascade to profile)\n        const { error: deleteError } = await supabase.auth.admin.deleteUser(user_id);\n        if (deleteError) {\n            console.error(\"Error deleting user:\", deleteError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to delete user\"\n            }, {\n                status: 500\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true\n        });\n    } catch (error) {\n        console.error(\"Delete user API error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/auth/users/route.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@supabase","vendor-chunks/next","vendor-chunks/cookie"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Fusers%2Froute&page=%2Fapi%2Fauth%2Fusers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fusers%2Froute.js&appDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frosspalmer%2FRoss%20GitHub%20Projects%2Faloa-web-design-project-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();