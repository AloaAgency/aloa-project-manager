"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_lib_emailTemplates_js"],{

/***/ "(app-pages-browser)/./lib/emailTemplates.js":
/*!*******************************!*\
  !*** ./lib/emailTemplates.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateAnalysisEmailHTML: function() { return /* binding */ generateAnalysisEmailHTML; },\n/* harmony export */   generateEmailPreview: function() { return /* binding */ generateEmailPreview; }\n/* harmony export */ });\nfunction generateAnalysisEmailHTML(formTitle, analysisData) {\n    let recipientName = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"\", isClientFacing = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;\n    const greeting = recipientName ? \"Dear \".concat(recipientName, \",\") : \"Hello,\";\n    // Parse analysis data similar to PDF\n    const parsed = typeof analysisData === \"string\" ? parseAnalysisForEmail(analysisData) : analysisData;\n    return '\\n<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n  <meta charset=\"UTF-8\">\\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n  <title>AI Analysis Report - '.concat(formTitle, '</title>\\n  <!--[if mso]>\\n  <noscript>\\n    <xml>\\n      <o:OfficeDocumentSettings>\\n        <o:PixelsPerInch>96</o:PixelsPerInch>\\n      </o:OfficeDocumentSettings>\\n    </xml>\\n  </noscript>\\n  <![endif]-->\\n</head>\\n<body style=\"margin: 0; padding: 0; font-family: -apple-system, BlinkMacSystemFont, \\'Segoe UI\\', Roboto, \\'Helvetica Neue\\', Arial, sans-serif; background-color: #f5f5f5;\">\\n  <table role=\"presentation\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-color: #f5f5f5;\">\\n    <tr>\\n      <td align=\"center\" style=\"padding: 40px 20px;\">\\n        <table role=\"presentation\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"600\" style=\"background-color: #ffffff; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\\n          \\n          <!-- Header -->\\n          <tr>\\n            <td style=\"background-color: #000000; padding: 30px; text-align: center; border-radius: 8px 8px 0 0;\">\\n              <h1 style=\"margin: 0; color: #FFF8E8; font-size: 24px; font-weight: 600;\">AI Analysis Report</h1>\\n              <p style=\"margin: 10px 0 0 0; color: #FFF8E8; font-size: 14px; opacity: 0.9;\">Powered by Aloa\\xae Custom Forms</p>\\n            </td>\\n          </tr>\\n          \\n          <!-- Content -->\\n          <tr>\\n            <td style=\"padding: 40px 30px;\">\\n              \\n              <!-- Greeting -->\\n              <p style=\"margin: 0 0 20px 0; color: #333333; font-size: 16px; line-height: 1.5;\">\\n                ').concat(greeting, '\\n              </p>\\n              \\n              <!-- Introduction -->\\n              <p style=\"margin: 0 0 30px 0; color: #666666; font-size: 14px; line-height: 1.6;\">\\n                ').concat(isClientFacing ? \"Thank you for participating in <strong>\".concat(formTitle, \"</strong>. We've analyzed all responses and are pleased to share the collective insights from all participants. This summary highlights where there's consensus and where perspectives differ.\") : \"We're pleased to share the AI-powered analysis of the responses collected through <strong>\".concat(formTitle, \"</strong>. This report provides valuable insights and recommendations based on the submitted data.\"), \"\\n              </p>\\n              \\n              \").concat(parsed.summary ? '\\n              <!-- Executive Summary -->\\n              <div style=\"margin-bottom: 30px; padding: 20px; background-color: #FFF8E8; border-left: 4px solid #000000; border-radius: 4px;\">\\n                <h2 style=\"margin: 0 0 15px 0; color: #000000; font-size: 18px; font-weight: 600;\">Executive Summary</h2>\\n                <p style=\"margin: 0; color: #333333; font-size: 14px; line-height: 1.6;\">\\n                  '.concat(parsed.summary, \"\\n                </p>\\n              </div>\\n              \") : \"\", \"\\n              \\n              \").concat(parsed.insights && parsed.insights.length > 0 ? '\\n              <!-- Key Insights -->\\n              <div style=\"margin-bottom: 30px;\">\\n                <h2 style=\"margin: 0 0 15px 0; color: #000000; font-size: 18px; font-weight: 600;\">Key Insights</h2>\\n                <ul style=\"margin: 0; padding-left: 20px; color: #333333;\">\\n                  '.concat(parsed.insights.map((insight)=>'\\n                    <li style=\"margin-bottom: 10px; font-size: 14px; line-height: 1.6;\">'.concat(insight, \"</li>\\n                  \")).join(\"\"), \"\\n                </ul>\\n              </div>\\n              \") : \"\", \"\\n              \\n              \").concat(parsed.trends && parsed.trends.length > 0 ? '\\n              <!-- Trends & Patterns -->\\n              <div style=\"margin-bottom: 30px;\">\\n                <h2 style=\"margin: 0 0 15px 0; color: #000000; font-size: 18px; font-weight: 600;\">Trends & Patterns</h2>\\n                <ul style=\"margin: 0; padding-left: 20px; color: #333333;\">\\n                  '.concat(parsed.trends.map((trend)=>'\\n                    <li style=\"margin-bottom: 10px; font-size: 14px; line-height: 1.6;\">'.concat(trend, \"</li>\\n                  \")).join(\"\"), \"\\n                </ul>\\n              </div>\\n              \") : \"\", \"\\n              \\n              \").concat(parsed.recommendations && parsed.recommendations.length > 0 && !isClientFacing ? '\\n              <!-- Recommendations (Internal Only) -->\\n              <div style=\"margin-bottom: 30px; padding: 20px; background-color: #f8f9fa; border-radius: 4px;\">\\n                <h2 style=\"margin: 0 0 15px 0; color: #000000; font-size: 18px; font-weight: 600;\">Recommendations</h2>\\n                <ol style=\"margin: 0; padding-left: 20px; color: #333333;\">\\n                  '.concat(parsed.recommendations.map((rec)=>'\\n                    <li style=\"margin-bottom: 10px; font-size: 14px; line-height: 1.6; font-weight: 500;\">'.concat(rec, \"</li>\\n                  \")).join(\"\"), \"\\n                </ol>\\n              </div>\\n              \") : \"\", \"\\n              \\n              \").concat(parsed.synthesis && isClientFacing ? '\\n              <!-- Synthesis & Path Forward -->\\n              <div style=\"margin-bottom: 30px; padding: 20px; background-color: #e8f4fd; border-radius: 4px; border-left: 4px solid #0066cc;\">\\n                <h2 style=\"margin: 0 0 15px 0; color: #000000; font-size: 18px; font-weight: 600;\">Synthesis & Path Forward</h2>\\n                <p style=\"margin: 0; color: #333333; font-size: 14px; line-height: 1.6;\">\\n                  '.concat(parsed.synthesis, \"\\n                </p>\\n              </div>\\n              \") : \"\", \"\\n              \\n              \").concat(parsed.statistics && Object.keys(parsed.statistics).length > 0 ? '\\n              <!-- Statistics -->\\n              <div style=\"margin-bottom: 30px;\">\\n                <h2 style=\"margin: 0 0 15px 0; color: #000000; font-size: 18px; font-weight: 600;\">Response Statistics</h2>\\n                <table role=\"presentation\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\\n                  '.concat(parsed.statistics.totalResponses !== undefined ? '\\n                  <tr>\\n                    <td style=\"padding: 8px 0; color: #666666; font-size: 14px;\">Total Responses:</td>\\n                    <td style=\"padding: 8px 0; color: #000000; font-size: 14px; font-weight: 600; text-align: right;\">'.concat(parsed.statistics.totalResponses, \"</td>\\n                  </tr>\\n                  \") : \"\", \"\\n                  \").concat(parsed.statistics.completionRate !== undefined ? '\\n                  <tr>\\n                    <td style=\"padding: 8px 0; color: #666666; font-size: 14px;\">Completion Rate:</td>\\n                    <td style=\"padding: 8px 0; color: #000000; font-size: 14px; font-weight: 600; text-align: right;\">'.concat(parsed.statistics.completionRate, \"%</td>\\n                  </tr>\\n                  \") : \"\", \"\\n                  \").concat(parsed.statistics.averageTime !== undefined ? '\\n                  <tr>\\n                    <td style=\"padding: 8px 0; color: #666666; font-size: 14px;\">Average Time:</td>\\n                    <td style=\"padding: 8px 0; color: #000000; font-size: 14px; font-weight: 600; text-align: right;\">'.concat(parsed.statistics.averageTime, \"</td>\\n                  </tr>\\n                  \") : \"\", \"\\n                </table>\\n              </div>\\n              \") : \"\", '\\n              \\n              <!-- Closing -->\\n              <div style=\"margin-top: 40px; padding-top: 20px; border-top: 1px solid #e0e0e0;\">\\n                ').concat(isClientFacing ? '\\n                  <p style=\"margin: 0 0 20px 0; color: #666666; font-size: 14px; line-height: 1.6;\">\\n                    This analysis represents the collective input from all participants. We appreciate your contribution to this collaborative process.\\n                  </p>\\n                  <p style=\"margin: 0 0 20px 0; color: #666666; font-size: 14px; line-height: 1.6;\">\\n                    If you have any questions about these findings or would like to discuss next steps, please don\\'t hesitate to reach out to our team.\\n                  </p>\\n                ' : '\\n                  <p style=\"margin: 0 0 20px 0; color: #666666; font-size: 14px; line-height: 1.6;\">\\n                    For a more detailed analysis and to download the full report, please visit your dashboard.\\n                  </p>\\n                  <p style=\"margin: 0 0 20px 0; color: #666666; font-size: 14px; line-height: 1.6;\">\\n                    Thank you for using Aloa\\xae Custom Forms. If you have any questions about this analysis, please don\\'t hesitate to reach out.\\n                  </p>\\n                ', '\\n              </div>\\n              \\n              <p style=\"margin: 20px 0 0 0; color: #666666; font-size: 14px;\">\\n                Best regards,<br>\\n                <strong>The Aloa\\xae Team</strong>\\n              </p>\\n              \\n            </td>\\n          </tr>\\n          \\n          <!-- Footer -->\\n          <tr>\\n            <td style=\"padding: 30px; background-color: #f8f9fa; text-align: center; border-radius: 0 0 8px 8px;\">\\n              <p style=\"margin: 0 0 10px 0; color: #999999; font-size: 12px;\">\\n                This report was generated on ').concat(new Date().toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n    }), '\\n              </p>\\n              <p style=\"margin: 0; color: #999999; font-size: 12px;\">\\n                \\xa9 ').concat(new Date().getFullYear(), \" Aloa\\xae. All rights reserved.\\n              </p>\\n            </td>\\n          </tr>\\n          \\n        </table>\\n      </td>\\n    </tr>\\n  </table>\\n</body>\\n</html>\\n  \");\n}\nfunction parseAnalysisForEmail(analysisText) {\n    const data = {\n        summary: \"\",\n        insights: [],\n        trends: [],\n        recommendations: [],\n        synthesis: \"\",\n        statistics: {}\n    };\n    if (!analysisText) return data;\n    // Split by sections (looking for markdown headers)\n    const sections = analysisText.split(/##\\s+/);\n    sections.forEach((section)=>{\n        const lines = section.trim().split(\"\\n\");\n        const sectionTitle = lines[0].toLowerCase();\n        const content = lines.slice(1).join(\"\\n\").trim();\n        if (sectionTitle.includes(\"summary\") || sectionTitle.includes(\"overview\")) {\n            data.summary = content.replace(/^[-•*]\\s*/gm, \"\").trim();\n        } else if (sectionTitle.includes(\"insight\") || sectionTitle.includes(\"finding\")) {\n            const insights = content.split(/^[-•*]\\s+/m).filter(Boolean);\n            data.insights = insights.map((i)=>i.trim());\n        } else if (sectionTitle.includes(\"trend\") || sectionTitle.includes(\"pattern\")) {\n            const trends = content.split(/^[-•*]\\s+/m).filter(Boolean);\n            data.trends = trends.map((t)=>t.trim());\n        } else if (sectionTitle.includes(\"recommend\") || sectionTitle.includes(\"suggestion\")) {\n            const recs = content.split(/^[\\d.]+\\s+/m).filter(Boolean);\n            data.recommendations = recs.map((r)=>r.trim());\n        } else if (sectionTitle.includes(\"synthesis\") || sectionTitle.includes(\"consensus\") || sectionTitle.includes(\"path forward\")) {\n            data.synthesis = content.replace(/^[-•*]\\s*/gm, \"\").trim();\n        } else if (sectionTitle.includes(\"statistic\") || sectionTitle.includes(\"metric\")) {\n            const statLines = content.split(\"\\n\");\n            statLines.forEach((line)=>{\n                if (line.includes(\"Total\") && line.includes(\"Response\")) {\n                    const match = line.match(/\\d+/);\n                    if (match) data.statistics.totalResponses = parseInt(match[0]);\n                }\n                if (line.includes(\"Completion\") && line.includes(\"Rate\")) {\n                    const match = line.match(/(\\d+(?:\\.\\d+)?)\\s*%/);\n                    if (match) data.statistics.completionRate = parseFloat(match[1]);\n                }\n                if (line.includes(\"Average\") && line.includes(\"Time\")) {\n                    const match = line.match(/(\\d+(?:\\.\\d+)?)\\s*(minute|second|hour)/i);\n                    if (match) data.statistics.averageTime = \"\".concat(match[1], \" \").concat(match[2], \"s\");\n                }\n            });\n        }\n    });\n    // If no structured data found, treat entire text as summary\n    if (!data.summary && data.insights.length === 0 && data.trends.length === 0) {\n        // Try to extract at least the first paragraph as summary\n        const paragraphs = analysisText.split(/\\n\\n+/);\n        if (paragraphs.length > 0) {\n            data.summary = paragraphs[0].replace(/^#\\s+/, \"\").trim();\n        }\n    }\n    return data;\n}\n// Export preview function for UI\nfunction generateEmailPreview(formTitle, analysisData) {\n    let recipientName = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"\", isClientFacing = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;\n    const emailHTML = generateAnalysisEmailHTML(formTitle, analysisData, recipientName, isClientFacing);\n    // Return both HTML and a simplified preview object\n    return {\n        html: emailHTML,\n        preview: {\n            subject: \"\".concat(isClientFacing ? \"Your Input Summary\" : \"AI Analysis Report\", \": \").concat(formTitle),\n            greeting: recipientName ? \"Dear \".concat(recipientName, \",\") : \"Hello,\",\n            isClientFacing,\n            sections: extractSectionsFromHTML(emailHTML)\n        }\n    };\n}\nfunction extractSectionsFromHTML(html) {\n    // Simple extraction of main sections for preview\n    const sections = [];\n    if (html.includes(\"Executive Summary\")) {\n        sections.push(\"Executive Summary\");\n    }\n    if (html.includes(\"Key Insights\")) {\n        sections.push(\"Key Insights\");\n    }\n    if (html.includes(\"Areas of Divergence\")) {\n        sections.push(\"Areas of Divergence\");\n    }\n    if (html.includes(\"Synthesis & Path Forward\")) {\n        sections.push(\"Synthesis & Path Forward\");\n    }\n    if (html.includes(\"Recommendations\")) {\n        sections.push(\"Recommendations\");\n    }\n    if (html.includes(\"Response Statistics\")) {\n        sections.push(\"Response Statistics\");\n    }\n    return sections;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/emailTemplates.js\n"));

/***/ })

}]);