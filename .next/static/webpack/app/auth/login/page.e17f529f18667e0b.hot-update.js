"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/auth/login/page",{

/***/ "(app-pages-browser)/./lib/supabase-auth.js":
/*!******************************!*\
  !*** ./lib/supabase-auth.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClient: function() { return /* binding */ createClient; },\n/* harmony export */   getCurrentUser: function() { return /* binding */ getCurrentUser; },\n/* harmony export */   hasProjectPermission: function() { return /* binding */ hasProjectPermission; },\n/* harmony export */   hasRole: function() { return /* binding */ hasRole; },\n/* harmony export */   logActivity: function() { return /* binding */ logActivity; },\n/* harmony export */   resetPassword: function() { return /* binding */ resetPassword; },\n/* harmony export */   signInWithEmail: function() { return /* binding */ signInWithEmail; },\n/* harmony export */   signInWithMagicLink: function() { return /* binding */ signInWithMagicLink; },\n/* harmony export */   signOut: function() { return /* binding */ signOut; },\n/* harmony export */   signUp: function() { return /* binding */ signUp; },\n/* harmony export */   updatePassword: function() { return /* binding */ updatePassword; }\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(app-pages-browser)/./node_modules/@supabase/ssr/dist/module/index.js\");\n\n// Create a Supabase client for client-side operations\nfunction createClient() {\n    const url = \"https://eycgzjqwowrdmjlzqqyg.supabase.co\";\n    const key = \"sb_publishable_eG0lH_ACpyOjqG44mN_5PA_1-oFLr5n\" || 0;\n    console.log(\"Creating Supabase client with:\", {\n        url: url,\n        keyPrefix: key ? key.substring(0, 20) + \"...\" : \"NO KEY\"\n    });\n    if (!url || !key) {\n        console.error(\"Missing Supabase environment variables\");\n        throw new Error(\"Supabase configuration is missing\");\n    }\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createBrowserClient)(url, key);\n}\n// Helper function to get the current user\nasync function getCurrentUser() {\n    const supabase = createClient();\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error || !user) {\n        return null;\n    }\n    // Get the user profile with role information\n    const { data: profile } = await supabase.from(\"aloa_user_profiles\").select(\"*\").eq(\"id\", user.id).single();\n    return {\n        ...user,\n        profile\n    };\n}\n// Helper function to check if user has a specific role\nasync function hasRole(requiredRole) {\n    var _user_profile;\n    const user = await getCurrentUser();\n    return (user === null || user === void 0 ? void 0 : (_user_profile = user.profile) === null || _user_profile === void 0 ? void 0 : _user_profile.role) === requiredRole;\n}\n// Helper function to check project-specific permissions\nasync function hasProjectPermission(projectId, permission) {\n    const supabase = createClient();\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) return false;\n    const { data: member } = await supabase.from(\"aloa_project_members\").select(\"*\").eq(\"user_id\", user.id).eq(\"project_id\", projectId).single();\n    if (!member) return false;\n    // Check specific permission or role-based permission\n    if (permission === \"view\") {\n        return true; // All members can view\n    }\n    if (permission === \"edit\") {\n        return member.can_edit || [\n            \"owner\",\n            \"admin\",\n            \"editor\"\n        ].includes(member.project_role);\n    }\n    if (permission === \"delete\") {\n        return member.can_delete || [\n            \"owner\",\n            \"admin\"\n        ].includes(member.project_role);\n    }\n    if (permission === \"manage\") {\n        return member.can_manage_team || [\n            \"owner\",\n            \"admin\"\n        ].includes(member.project_role);\n    }\n    return false;\n}\n// Helper function to sign out\nasync function signOut() {\n    const supabase = createClient();\n    const { error } = await supabase.auth.signOut();\n    if (error) {\n        console.error(\"Error signing out:\", error);\n        return false;\n    }\n    return true;\n}\n// Helper function to sign in with email and password\nasync function signInWithEmail(email, password) {\n    const supabase = createClient();\n    console.log(\"Attempting to sign in with email:\", email);\n    const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password\n    });\n    console.log(\"Sign in response:\", {\n        hasData: !!data,\n        hasUser: !!(data === null || data === void 0 ? void 0 : data.user),\n        hasSession: !!(data === null || data === void 0 ? void 0 : data.session),\n        error: error === null || error === void 0 ? void 0 : error.message\n    });\n    if (error) {\n        console.error(\"Sign in error:\", error);\n        return {\n            error: error.message\n        };\n    }\n    if (!data || !data.user) {\n        console.error(\"No user data returned from sign in\");\n        return {\n            error: \"Sign in failed - no user data returned\"\n        };\n    }\n    return {\n        user: data.user,\n        session: data.session\n    };\n}\n// Helper function to sign in with magic link\nasync function signInWithMagicLink(email) {\n    const supabase = createClient();\n    const { error } = await supabase.auth.signInWithOtp({\n        email,\n        options: {\n            emailRedirectTo: \"\".concat(window.location.origin, \"/auth/callback\")\n        }\n    });\n    if (error) {\n        return {\n            error: error.message\n        };\n    }\n    return {\n        success: true\n    };\n}\n// Helper function to sign up\nasync function signUp(email, password) {\n    let fullName = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"\";\n    const supabase = createClient();\n    const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n            data: {\n                full_name: fullName\n            },\n            emailRedirectTo: \"\".concat(window.location.origin, \"/auth/callback\")\n        }\n    });\n    if (error) {\n        return {\n            error: error.message\n        };\n    }\n    // Check if user already exists (Supabase returns user object but identities array is empty for existing users)\n    if (data.user && data.user.identities && data.user.identities.length === 0) {\n        return {\n            error: \"A user with this email already exists. Please sign in instead.\",\n            userExists: true\n        };\n    }\n    return {\n        user: data.user\n    };\n}\n// Helper function to reset password\nasync function resetPassword(email) {\n    const supabase = createClient();\n    console.log(\"Attempting to reset password for:\", email);\n    const { data, error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: \"\".concat(window.location.origin, \"/auth/update-password\")\n    });\n    console.log(\"Reset password response:\", {\n        data,\n        error\n    });\n    if (error) {\n        console.error(\"Reset password error:\", error);\n        return {\n            error: error.message\n        };\n    }\n    return {\n        success: true\n    };\n}\n// Helper function to update password\nasync function updatePassword(newPassword) {\n    const supabase = createClient();\n    const { error } = await supabase.auth.updateUser({\n        password: newPassword\n    });\n    if (error) {\n        return {\n            error: error.message\n        };\n    }\n    return {\n        success: true\n    };\n}\n// Helper function to log user activity\nasync function logActivity(action) {\n    let projectId = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, resourceType = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, resourceId = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null, details = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};\n    const supabase = createClient();\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) return;\n    try {\n        await supabase.rpc(\"aloa_log_user_activity\", {\n            p_user_id: user.id,\n            p_project_id: projectId,\n            p_action: action,\n            p_resource_type: resourceType,\n            p_resource_id: resourceId,\n            p_details: details,\n            p_user_agent: navigator.userAgent\n        });\n    } catch (error) {\n        console.error(\"Failed to log activity:\", error);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/supabase-auth.js\n"));

/***/ })

});